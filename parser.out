Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN ACTION_5 BODY END
Rule 2     ACTION_1 -> <empty>
Rule 3     ACTION_5 -> <empty>
Rule 4     Declare_var -> VARS
Rule 5     Declare_var -> vacio
Rule 6     VARS -> VAR Variables
Rule 7     Variables -> List_ids COLON Type SEMICOLON More_variables
Rule 8     More_variables -> Variables
Rule 9     More_variables -> vacio
Rule 10    List_ids -> ID ACTION_2 More_ids
Rule 11    ACTION_2 -> <empty>
Rule 12    More_ids -> COMMA List_ids
Rule 13    More_ids -> vacio
Rule 14    Type -> INT ACTION_3
Rule 15    Type -> FLOAT ACTION_3
Rule 16    ACTION_3 -> <empty>
Rule 17    Declare_func -> FUNCS More_func
Rule 18    Declare_func -> vacio
Rule 19    More_func -> Declare_func
Rule 20    More_func -> vacio
Rule 21    FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON
Rule 22    ACTION_4 -> <empty>
Rule 23    Parameters -> ID ACTION_2 COLON Type More_parameters
Rule 24    Parameters -> vacio
Rule 25    More_parameters -> COMMA Parameters
Rule 26    More_parameters -> vacio
Rule 27    BODY -> LCBRACKET Declare_statement RCBRACKET
Rule 28    Declare_statement -> STATEMENT Declare_statement
Rule 29    Declare_statement -> vacio
Rule 30    STATEMENT -> ASSIGN
Rule 31    STATEMENT -> CONDITION
Rule 32    STATEMENT -> CYCLE
Rule 33    STATEMENT -> F_CALL
Rule 34    STATEMENT -> PRINTF
Rule 35    ASSIGN -> ID EQUALS EXPRESION SEMICOLON
Rule 36    EXPRESION -> EXP Comp_logic
Rule 37    Comp_logic -> Op_logic EXP
Rule 38    Comp_logic -> vacio
Rule 39    Op_logic -> GREATER
Rule 40    Op_logic -> LESS
Rule 41    Op_logic -> NOT_EQUALS
Rule 42    EXP -> TERMINO Sum_res
Rule 43    Sum_res -> PLUS EXP
Rule 44    Sum_res -> MINUS EXP
Rule 45    Sum_res -> vacio
Rule 46    TERMINO -> FACTOR Mult_div
Rule 47    Mult_div -> MULTIPLICATION TERMINO
Rule 48    Mult_div -> DIVISION TERMINO
Rule 49    Mult_div -> vacio
Rule 50    FACTOR -> LPARENTHESES EXPRESION RPARENTHESES
Rule 51    FACTOR -> Sum_res_factor ID_CONST
Rule 52    Sum_res_factor -> PLUS
Rule 53    Sum_res_factor -> MINUS
Rule 54    Sum_res_factor -> vacio
Rule 55    ID_CONST -> ID
Rule 56    ID_CONST -> CTE
Rule 57    CTE -> CTE_INT
Rule 58    CTE -> CTE_FLOAT
Rule 59    PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON
Rule 60    List_expresions -> Opt_exp More_expresions
Rule 61    Opt_exp -> EXPRESION
Rule 62    Opt_exp -> CTE_STRING
Rule 63    More_expresions -> COMMA List_expresions
Rule 64    More_expresions -> vacio
Rule 65    CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON
Rule 66    CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON
Rule 67    Else_condition -> ELSE BODY
Rule 68    Else_condition -> vacio
Rule 69    F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON
Rule 70    F_expresion -> List_fexpresions
Rule 71    F_expresion -> vacio
Rule 72    List_fexpresions -> EXPRESION More_fexpresions
Rule 73    More_fexpresions -> COMMA List_fexpresions
Rule 74    More_fexpresions -> vacio
Rule 75    vacio -> <empty>

Terminals, with rules where they appear

COLON                : 7 23
COMMA                : 12 25 63 73
CTE_FLOAT            : 58
CTE_INT              : 57
CTE_STRING           : 62
DIVISION             : 48
DO                   : 65
ELSE                 : 67
END                  : 1
EQUALS               : 35
FLOAT                : 15
GREATER              : 39
ID                   : 1 10 21 23 35 55 69
IF                   : 66
INT                  : 14
LBRACKET             : 21
LCBRACKET            : 27
LESS                 : 40
LPARENTHESES         : 21 50 59 65 66 69
MAIN                 : 1
MINUS                : 44 53
MULTIPLICATION       : 47
NOT_EQUALS           : 41
PLUS                 : 43 52
PRINT                : 59
PROGRAM              : 1
RBRACKET             : 21
RCBRACKET            : 27
RPARENTHESES         : 21 50 59 65 66 69
SEMICOLON            : 1 7 21 35 59 65 66 69
VAR                  : 6
VOID                 : 21
WHILE                : 65
error                : 

Nonterminals, with rules where they appear

ACTION_1             : 1
ACTION_2             : 10 23
ACTION_3             : 14 15
ACTION_4             : 21
ACTION_5             : 1
ASSIGN               : 30
BODY                 : 1 21 65 66 67
CONDITION            : 31
CTE                  : 56
CYCLE                : 32
Comp_logic           : 36
Declare_func         : 1 19
Declare_statement    : 27 28
Declare_var          : 1 21
EXP                  : 36 37 43 44
EXPRESION            : 35 50 61 65 66 72
Else_condition       : 66
FACTOR               : 46
FUNCS                : 17
F_CALL               : 33
F_expresion          : 69
ID_CONST             : 51
List_expresions      : 59 63
List_fexpresions     : 70 73
List_ids             : 7 12
More_expresions      : 60
More_fexpresions     : 72
More_func            : 17
More_ids             : 10
More_parameters      : 23
More_variables       : 7
Mult_div             : 46
Op_logic             : 37
Opt_exp              : 60
PRINTF               : 34
Parameters           : 21 25
Programa             : 0
STATEMENT            : 28
Sum_res              : 42
Sum_res_factor       : 51
TERMINO              : 42 47 48
Type                 : 7 23
VARS                 : 4
Variables            : 6 8
vacio                : 5 9 13 18 20 24 26 29 38 45 49 54 64 68 71 74

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN ACTION_5 BODY END

    PROGRAM         shift and go to state 2

    Programa                       shift and go to state 1

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> PROGRAM . ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN ACTION_5 BODY END

    ID              shift and go to state 3


state 3

    (1) Programa -> PROGRAM ID . ACTION_1 SEMICOLON Declare_var Declare_func MAIN ACTION_5 BODY END
    (2) ACTION_1 -> .

    SEMICOLON       reduce using rule 2 (ACTION_1 -> .)

    ACTION_1                       shift and go to state 4

state 4

    (1) Programa -> PROGRAM ID ACTION_1 . SEMICOLON Declare_var Declare_func MAIN ACTION_5 BODY END

    SEMICOLON       shift and go to state 5


state 5

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON . Declare_var Declare_func MAIN ACTION_5 BODY END
    (4) Declare_var -> . VARS
    (5) Declare_var -> . vacio
    (6) VARS -> . VAR Variables
    (75) vacio -> .

    VAR             shift and go to state 9
    VOID            reduce using rule 75 (vacio -> .)
    MAIN            reduce using rule 75 (vacio -> .)

    Declare_var                    shift and go to state 6
    VARS                           shift and go to state 7
    vacio                          shift and go to state 8

state 6

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var . Declare_func MAIN ACTION_5 BODY END
    (17) Declare_func -> . FUNCS More_func
    (18) Declare_func -> . vacio
    (21) FUNCS -> . VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON
    (75) vacio -> .

    VOID            shift and go to state 13
    MAIN            reduce using rule 75 (vacio -> .)

    Declare_func                   shift and go to state 10
    FUNCS                          shift and go to state 11
    vacio                          shift and go to state 12

state 7

    (4) Declare_var -> VARS .

    VOID            reduce using rule 4 (Declare_var -> VARS .)
    MAIN            reduce using rule 4 (Declare_var -> VARS .)
    LCBRACKET       reduce using rule 4 (Declare_var -> VARS .)


state 8

    (5) Declare_var -> vacio .

    VOID            reduce using rule 5 (Declare_var -> vacio .)
    MAIN            reduce using rule 5 (Declare_var -> vacio .)
    LCBRACKET       reduce using rule 5 (Declare_var -> vacio .)


state 9

    (6) VARS -> VAR . Variables
    (7) Variables -> . List_ids COLON Type SEMICOLON More_variables
    (10) List_ids -> . ID ACTION_2 More_ids

    ID              shift and go to state 16

    Variables                      shift and go to state 14
    List_ids                       shift and go to state 15

state 10

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func . MAIN ACTION_5 BODY END

    MAIN            shift and go to state 17


state 11

    (17) Declare_func -> FUNCS . More_func
    (19) More_func -> . Declare_func
    (20) More_func -> . vacio
    (17) Declare_func -> . FUNCS More_func
    (18) Declare_func -> . vacio
    (75) vacio -> .
    (21) FUNCS -> . VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON

    MAIN            reduce using rule 75 (vacio -> .)
    VOID            shift and go to state 13

    FUNCS                          shift and go to state 11
    More_func                      shift and go to state 18
    Declare_func                   shift and go to state 19
    vacio                          shift and go to state 20

state 12

    (18) Declare_func -> vacio .

    MAIN            reduce using rule 18 (Declare_func -> vacio .)


state 13

    (21) FUNCS -> VOID . ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON

    ID              shift and go to state 21


state 14

    (6) VARS -> VAR Variables .

    VOID            reduce using rule 6 (VARS -> VAR Variables .)
    MAIN            reduce using rule 6 (VARS -> VAR Variables .)
    LCBRACKET       reduce using rule 6 (VARS -> VAR Variables .)


state 15

    (7) Variables -> List_ids . COLON Type SEMICOLON More_variables

    COLON           shift and go to state 22


state 16

    (10) List_ids -> ID . ACTION_2 More_ids
    (11) ACTION_2 -> .

    COMMA           reduce using rule 11 (ACTION_2 -> .)
    COLON           reduce using rule 11 (ACTION_2 -> .)

    ACTION_2                       shift and go to state 23

state 17

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN . ACTION_5 BODY END
    (3) ACTION_5 -> .

    LCBRACKET       reduce using rule 3 (ACTION_5 -> .)

    ACTION_5                       shift and go to state 24

state 18

    (17) Declare_func -> FUNCS More_func .

    MAIN            reduce using rule 17 (Declare_func -> FUNCS More_func .)


state 19

    (19) More_func -> Declare_func .

    MAIN            reduce using rule 19 (More_func -> Declare_func .)


state 20

    (20) More_func -> vacio .
    (18) Declare_func -> vacio .

  ! reduce/reduce conflict for MAIN resolved using rule 18 (Declare_func -> vacio .)
    MAIN            reduce using rule 18 (Declare_func -> vacio .)

  ! MAIN            [ reduce using rule 20 (More_func -> vacio .) ]


state 21

    (21) FUNCS -> VOID ID . ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON
    (22) ACTION_4 -> .

    LPARENTHESES    reduce using rule 22 (ACTION_4 -> .)

    ACTION_4                       shift and go to state 25

state 22

    (7) Variables -> List_ids COLON . Type SEMICOLON More_variables
    (14) Type -> . INT ACTION_3
    (15) Type -> . FLOAT ACTION_3

    INT             shift and go to state 27
    FLOAT           shift and go to state 28

    Type                           shift and go to state 26

state 23

    (10) List_ids -> ID ACTION_2 . More_ids
    (12) More_ids -> . COMMA List_ids
    (13) More_ids -> . vacio
    (75) vacio -> .

    COMMA           shift and go to state 30
    COLON           reduce using rule 75 (vacio -> .)

    More_ids                       shift and go to state 29
    vacio                          shift and go to state 31

state 24

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN ACTION_5 . BODY END
    (27) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 33

    BODY                           shift and go to state 32

state 25

    (21) FUNCS -> VOID ID ACTION_4 . LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON

    LPARENTHESES    shift and go to state 34


state 26

    (7) Variables -> List_ids COLON Type . SEMICOLON More_variables

    SEMICOLON       shift and go to state 35


state 27

    (14) Type -> INT . ACTION_3
    (16) ACTION_3 -> .

    SEMICOLON       reduce using rule 16 (ACTION_3 -> .)
    COMMA           reduce using rule 16 (ACTION_3 -> .)
    RPARENTHESES    reduce using rule 16 (ACTION_3 -> .)

    ACTION_3                       shift and go to state 36

state 28

    (15) Type -> FLOAT . ACTION_3
    (16) ACTION_3 -> .

    SEMICOLON       reduce using rule 16 (ACTION_3 -> .)
    COMMA           reduce using rule 16 (ACTION_3 -> .)
    RPARENTHESES    reduce using rule 16 (ACTION_3 -> .)

    ACTION_3                       shift and go to state 37

state 29

    (10) List_ids -> ID ACTION_2 More_ids .

    COLON           reduce using rule 10 (List_ids -> ID ACTION_2 More_ids .)


state 30

    (12) More_ids -> COMMA . List_ids
    (10) List_ids -> . ID ACTION_2 More_ids

    ID              shift and go to state 16

    List_ids                       shift and go to state 38

state 31

    (13) More_ids -> vacio .

    COLON           reduce using rule 13 (More_ids -> vacio .)


state 32

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN ACTION_5 BODY . END

    END             shift and go to state 39


state 33

    (27) BODY -> LCBRACKET . Declare_statement RCBRACKET
    (28) Declare_statement -> . STATEMENT Declare_statement
    (29) Declare_statement -> . vacio
    (30) STATEMENT -> . ASSIGN
    (31) STATEMENT -> . CONDITION
    (32) STATEMENT -> . CYCLE
    (33) STATEMENT -> . F_CALL
    (34) STATEMENT -> . PRINTF
    (75) vacio -> .
    (35) ASSIGN -> . ID EQUALS EXPRESION SEMICOLON
    (66) CONDITION -> . IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON
    (65) CYCLE -> . DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON
    (69) F_CALL -> . ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON
    (59) PRINTF -> . PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON

    RCBRACKET       reduce using rule 75 (vacio -> .)
    ID              shift and go to state 48
    IF              shift and go to state 49
    DO              shift and go to state 50
    PRINT           shift and go to state 51

    Declare_statement              shift and go to state 40
    STATEMENT                      shift and go to state 41
    vacio                          shift and go to state 42
    ASSIGN                         shift and go to state 43
    CONDITION                      shift and go to state 44
    CYCLE                          shift and go to state 45
    F_CALL                         shift and go to state 46
    PRINTF                         shift and go to state 47

state 34

    (21) FUNCS -> VOID ID ACTION_4 LPARENTHESES . Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON
    (23) Parameters -> . ID ACTION_2 COLON Type More_parameters
    (24) Parameters -> . vacio
    (75) vacio -> .

    ID              shift and go to state 52
    RPARENTHESES    reduce using rule 75 (vacio -> .)

    Parameters                     shift and go to state 53
    vacio                          shift and go to state 54

state 35

    (7) Variables -> List_ids COLON Type SEMICOLON . More_variables
    (8) More_variables -> . Variables
    (9) More_variables -> . vacio
    (7) Variables -> . List_ids COLON Type SEMICOLON More_variables
    (75) vacio -> .
    (10) List_ids -> . ID ACTION_2 More_ids

    VOID            reduce using rule 75 (vacio -> .)
    MAIN            reduce using rule 75 (vacio -> .)
    LCBRACKET       reduce using rule 75 (vacio -> .)
    ID              shift and go to state 16

    List_ids                       shift and go to state 15
    More_variables                 shift and go to state 55
    Variables                      shift and go to state 56
    vacio                          shift and go to state 57

state 36

    (14) Type -> INT ACTION_3 .

    SEMICOLON       reduce using rule 14 (Type -> INT ACTION_3 .)
    COMMA           reduce using rule 14 (Type -> INT ACTION_3 .)
    RPARENTHESES    reduce using rule 14 (Type -> INT ACTION_3 .)


state 37

    (15) Type -> FLOAT ACTION_3 .

    SEMICOLON       reduce using rule 15 (Type -> FLOAT ACTION_3 .)
    COMMA           reduce using rule 15 (Type -> FLOAT ACTION_3 .)
    RPARENTHESES    reduce using rule 15 (Type -> FLOAT ACTION_3 .)


state 38

    (12) More_ids -> COMMA List_ids .

    COLON           reduce using rule 12 (More_ids -> COMMA List_ids .)


state 39

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN ACTION_5 BODY END .

    $end            reduce using rule 1 (Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN ACTION_5 BODY END .)


state 40

    (27) BODY -> LCBRACKET Declare_statement . RCBRACKET

    RCBRACKET       shift and go to state 58


state 41

    (28) Declare_statement -> STATEMENT . Declare_statement
    (28) Declare_statement -> . STATEMENT Declare_statement
    (29) Declare_statement -> . vacio
    (30) STATEMENT -> . ASSIGN
    (31) STATEMENT -> . CONDITION
    (32) STATEMENT -> . CYCLE
    (33) STATEMENT -> . F_CALL
    (34) STATEMENT -> . PRINTF
    (75) vacio -> .
    (35) ASSIGN -> . ID EQUALS EXPRESION SEMICOLON
    (66) CONDITION -> . IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON
    (65) CYCLE -> . DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON
    (69) F_CALL -> . ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON
    (59) PRINTF -> . PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON

    RCBRACKET       reduce using rule 75 (vacio -> .)
    ID              shift and go to state 48
    IF              shift and go to state 49
    DO              shift and go to state 50
    PRINT           shift and go to state 51

    STATEMENT                      shift and go to state 41
    Declare_statement              shift and go to state 59
    vacio                          shift and go to state 42
    ASSIGN                         shift and go to state 43
    CONDITION                      shift and go to state 44
    CYCLE                          shift and go to state 45
    F_CALL                         shift and go to state 46
    PRINTF                         shift and go to state 47

state 42

    (29) Declare_statement -> vacio .

    RCBRACKET       reduce using rule 29 (Declare_statement -> vacio .)


state 43

    (30) STATEMENT -> ASSIGN .

    ID              reduce using rule 30 (STATEMENT -> ASSIGN .)
    IF              reduce using rule 30 (STATEMENT -> ASSIGN .)
    DO              reduce using rule 30 (STATEMENT -> ASSIGN .)
    PRINT           reduce using rule 30 (STATEMENT -> ASSIGN .)
    RCBRACKET       reduce using rule 30 (STATEMENT -> ASSIGN .)


state 44

    (31) STATEMENT -> CONDITION .

    ID              reduce using rule 31 (STATEMENT -> CONDITION .)
    IF              reduce using rule 31 (STATEMENT -> CONDITION .)
    DO              reduce using rule 31 (STATEMENT -> CONDITION .)
    PRINT           reduce using rule 31 (STATEMENT -> CONDITION .)
    RCBRACKET       reduce using rule 31 (STATEMENT -> CONDITION .)


state 45

    (32) STATEMENT -> CYCLE .

    ID              reduce using rule 32 (STATEMENT -> CYCLE .)
    IF              reduce using rule 32 (STATEMENT -> CYCLE .)
    DO              reduce using rule 32 (STATEMENT -> CYCLE .)
    PRINT           reduce using rule 32 (STATEMENT -> CYCLE .)
    RCBRACKET       reduce using rule 32 (STATEMENT -> CYCLE .)


state 46

    (33) STATEMENT -> F_CALL .

    ID              reduce using rule 33 (STATEMENT -> F_CALL .)
    IF              reduce using rule 33 (STATEMENT -> F_CALL .)
    DO              reduce using rule 33 (STATEMENT -> F_CALL .)
    PRINT           reduce using rule 33 (STATEMENT -> F_CALL .)
    RCBRACKET       reduce using rule 33 (STATEMENT -> F_CALL .)


state 47

    (34) STATEMENT -> PRINTF .

    ID              reduce using rule 34 (STATEMENT -> PRINTF .)
    IF              reduce using rule 34 (STATEMENT -> PRINTF .)
    DO              reduce using rule 34 (STATEMENT -> PRINTF .)
    PRINT           reduce using rule 34 (STATEMENT -> PRINTF .)
    RCBRACKET       reduce using rule 34 (STATEMENT -> PRINTF .)


state 48

    (35) ASSIGN -> ID . EQUALS EXPRESION SEMICOLON
    (69) F_CALL -> ID . LPARENTHESES F_expresion RPARENTHESES SEMICOLON

    EQUALS          shift and go to state 60
    LPARENTHESES    shift and go to state 61


state 49

    (66) CONDITION -> IF . LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON

    LPARENTHESES    shift and go to state 62


state 50

    (65) CYCLE -> DO . BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON
    (27) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 33

    BODY                           shift and go to state 63

state 51

    (59) PRINTF -> PRINT . LPARENTHESES List_expresions RPARENTHESES SEMICOLON

    LPARENTHESES    shift and go to state 64


state 52

    (23) Parameters -> ID . ACTION_2 COLON Type More_parameters
    (11) ACTION_2 -> .

    COLON           reduce using rule 11 (ACTION_2 -> .)

    ACTION_2                       shift and go to state 65

state 53

    (21) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters . RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON

    RPARENTHESES    shift and go to state 66


state 54

    (24) Parameters -> vacio .

    RPARENTHESES    reduce using rule 24 (Parameters -> vacio .)


state 55

    (7) Variables -> List_ids COLON Type SEMICOLON More_variables .

    VOID            reduce using rule 7 (Variables -> List_ids COLON Type SEMICOLON More_variables .)
    MAIN            reduce using rule 7 (Variables -> List_ids COLON Type SEMICOLON More_variables .)
    LCBRACKET       reduce using rule 7 (Variables -> List_ids COLON Type SEMICOLON More_variables .)


state 56

    (8) More_variables -> Variables .

    VOID            reduce using rule 8 (More_variables -> Variables .)
    MAIN            reduce using rule 8 (More_variables -> Variables .)
    LCBRACKET       reduce using rule 8 (More_variables -> Variables .)


state 57

    (9) More_variables -> vacio .

    VOID            reduce using rule 9 (More_variables -> vacio .)
    MAIN            reduce using rule 9 (More_variables -> vacio .)
    LCBRACKET       reduce using rule 9 (More_variables -> vacio .)


state 58

    (27) BODY -> LCBRACKET Declare_statement RCBRACKET .

    END             reduce using rule 27 (BODY -> LCBRACKET Declare_statement RCBRACKET .)
    WHILE           reduce using rule 27 (BODY -> LCBRACKET Declare_statement RCBRACKET .)
    ELSE            reduce using rule 27 (BODY -> LCBRACKET Declare_statement RCBRACKET .)
    SEMICOLON       reduce using rule 27 (BODY -> LCBRACKET Declare_statement RCBRACKET .)
    RBRACKET        reduce using rule 27 (BODY -> LCBRACKET Declare_statement RCBRACKET .)


state 59

    (28) Declare_statement -> STATEMENT Declare_statement .

    RCBRACKET       reduce using rule 28 (Declare_statement -> STATEMENT Declare_statement .)


state 60

    (35) ASSIGN -> ID EQUALS . EXPRESION SEMICOLON
    (36) EXPRESION -> . EXP Comp_logic
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    EXPRESION                      shift and go to state 67
    EXP                            shift and go to state 68
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 61

    (69) F_CALL -> ID LPARENTHESES . F_expresion RPARENTHESES SEMICOLON
    (70) F_expresion -> . List_fexpresions
    (71) F_expresion -> . vacio
    (72) List_fexpresions -> . EXPRESION More_fexpresions
    (75) vacio -> .
    (36) EXPRESION -> . EXP Comp_logic
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio

    RPARENTHESES    reduce using rule 75 (vacio -> .)
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)
    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74

    F_expresion                    shift and go to state 76
    List_fexpresions               shift and go to state 77
    vacio                          shift and go to state 78
    EXPRESION                      shift and go to state 79
    EXP                            shift and go to state 68
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72

state 62

    (66) CONDITION -> IF LPARENTHESES . EXPRESION RPARENTHESES BODY Else_condition SEMICOLON
    (36) EXPRESION -> . EXP Comp_logic
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    EXPRESION                      shift and go to state 80
    EXP                            shift and go to state 68
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 63

    (65) CYCLE -> DO BODY . WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON

    WHILE           shift and go to state 81


state 64

    (59) PRINTF -> PRINT LPARENTHESES . List_expresions RPARENTHESES SEMICOLON
    (60) List_expresions -> . Opt_exp More_expresions
    (61) Opt_exp -> . EXPRESION
    (62) Opt_exp -> . CTE_STRING
    (36) EXPRESION -> . EXP Comp_logic
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    CTE_STRING      shift and go to state 85
    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    List_expresions                shift and go to state 82
    Opt_exp                        shift and go to state 83
    EXPRESION                      shift and go to state 84
    EXP                            shift and go to state 68
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 65

    (23) Parameters -> ID ACTION_2 . COLON Type More_parameters

    COLON           shift and go to state 86


state 66

    (21) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES . LBRACKET Declare_var BODY RBRACKET SEMICOLON

    LBRACKET        shift and go to state 87


state 67

    (35) ASSIGN -> ID EQUALS EXPRESION . SEMICOLON

    SEMICOLON       shift and go to state 88


state 68

    (36) EXPRESION -> EXP . Comp_logic
    (37) Comp_logic -> . Op_logic EXP
    (38) Comp_logic -> . vacio
    (39) Op_logic -> . GREATER
    (40) Op_logic -> . LESS
    (41) Op_logic -> . NOT_EQUALS
    (75) vacio -> .

    GREATER         shift and go to state 92
    LESS            shift and go to state 93
    NOT_EQUALS      shift and go to state 94
    SEMICOLON       reduce using rule 75 (vacio -> .)
    COMMA           reduce using rule 75 (vacio -> .)
    RPARENTHESES    reduce using rule 75 (vacio -> .)

    Comp_logic                     shift and go to state 89
    Op_logic                       shift and go to state 90
    vacio                          shift and go to state 91

state 69

    (42) EXP -> TERMINO . Sum_res
    (43) Sum_res -> . PLUS EXP
    (44) Sum_res -> . MINUS EXP
    (45) Sum_res -> . vacio
    (75) vacio -> .

    PLUS            shift and go to state 96
    MINUS           shift and go to state 97
    GREATER         reduce using rule 75 (vacio -> .)
    LESS            reduce using rule 75 (vacio -> .)
    NOT_EQUALS      reduce using rule 75 (vacio -> .)
    SEMICOLON       reduce using rule 75 (vacio -> .)
    COMMA           reduce using rule 75 (vacio -> .)
    RPARENTHESES    reduce using rule 75 (vacio -> .)

    Sum_res                        shift and go to state 95
    vacio                          shift and go to state 98

state 70

    (46) TERMINO -> FACTOR . Mult_div
    (47) Mult_div -> . MULTIPLICATION TERMINO
    (48) Mult_div -> . DIVISION TERMINO
    (49) Mult_div -> . vacio
    (75) vacio -> .

    MULTIPLICATION  shift and go to state 100
    DIVISION        shift and go to state 101
    PLUS            reduce using rule 75 (vacio -> .)
    MINUS           reduce using rule 75 (vacio -> .)
    GREATER         reduce using rule 75 (vacio -> .)
    LESS            reduce using rule 75 (vacio -> .)
    NOT_EQUALS      reduce using rule 75 (vacio -> .)
    SEMICOLON       reduce using rule 75 (vacio -> .)
    COMMA           reduce using rule 75 (vacio -> .)
    RPARENTHESES    reduce using rule 75 (vacio -> .)

    Mult_div                       shift and go to state 99
    vacio                          shift and go to state 102

state 71

    (50) FACTOR -> LPARENTHESES . EXPRESION RPARENTHESES
    (36) EXPRESION -> . EXP Comp_logic
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    EXPRESION                      shift and go to state 103
    EXP                            shift and go to state 68
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 72

    (51) FACTOR -> Sum_res_factor . ID_CONST
    (55) ID_CONST -> . ID
    (56) ID_CONST -> . CTE
    (57) CTE -> . CTE_INT
    (58) CTE -> . CTE_FLOAT

    ID              shift and go to state 105
    CTE_INT         shift and go to state 107
    CTE_FLOAT       shift and go to state 108

    ID_CONST                       shift and go to state 104
    CTE                            shift and go to state 106

state 73

    (52) Sum_res_factor -> PLUS .

    ID              reduce using rule 52 (Sum_res_factor -> PLUS .)
    CTE_INT         reduce using rule 52 (Sum_res_factor -> PLUS .)
    CTE_FLOAT       reduce using rule 52 (Sum_res_factor -> PLUS .)


state 74

    (53) Sum_res_factor -> MINUS .

    ID              reduce using rule 53 (Sum_res_factor -> MINUS .)
    CTE_INT         reduce using rule 53 (Sum_res_factor -> MINUS .)
    CTE_FLOAT       reduce using rule 53 (Sum_res_factor -> MINUS .)


state 75

    (54) Sum_res_factor -> vacio .

    ID              reduce using rule 54 (Sum_res_factor -> vacio .)
    CTE_INT         reduce using rule 54 (Sum_res_factor -> vacio .)
    CTE_FLOAT       reduce using rule 54 (Sum_res_factor -> vacio .)


state 76

    (69) F_CALL -> ID LPARENTHESES F_expresion . RPARENTHESES SEMICOLON

    RPARENTHESES    shift and go to state 109


state 77

    (70) F_expresion -> List_fexpresions .

    RPARENTHESES    reduce using rule 70 (F_expresion -> List_fexpresions .)


state 78

    (71) F_expresion -> vacio .
    (54) Sum_res_factor -> vacio .

    RPARENTHESES    reduce using rule 71 (F_expresion -> vacio .)
    ID              reduce using rule 54 (Sum_res_factor -> vacio .)
    CTE_INT         reduce using rule 54 (Sum_res_factor -> vacio .)
    CTE_FLOAT       reduce using rule 54 (Sum_res_factor -> vacio .)


state 79

    (72) List_fexpresions -> EXPRESION . More_fexpresions
    (73) More_fexpresions -> . COMMA List_fexpresions
    (74) More_fexpresions -> . vacio
    (75) vacio -> .

    COMMA           shift and go to state 111
    RPARENTHESES    reduce using rule 75 (vacio -> .)

    More_fexpresions               shift and go to state 110
    vacio                          shift and go to state 112

state 80

    (66) CONDITION -> IF LPARENTHESES EXPRESION . RPARENTHESES BODY Else_condition SEMICOLON

    RPARENTHESES    shift and go to state 113


state 81

    (65) CYCLE -> DO BODY WHILE . LPARENTHESES EXPRESION RPARENTHESES SEMICOLON

    LPARENTHESES    shift and go to state 114


state 82

    (59) PRINTF -> PRINT LPARENTHESES List_expresions . RPARENTHESES SEMICOLON

    RPARENTHESES    shift and go to state 115


state 83

    (60) List_expresions -> Opt_exp . More_expresions
    (63) More_expresions -> . COMMA List_expresions
    (64) More_expresions -> . vacio
    (75) vacio -> .

    COMMA           shift and go to state 117
    RPARENTHESES    reduce using rule 75 (vacio -> .)

    More_expresions                shift and go to state 116
    vacio                          shift and go to state 118

state 84

    (61) Opt_exp -> EXPRESION .

    COMMA           reduce using rule 61 (Opt_exp -> EXPRESION .)
    RPARENTHESES    reduce using rule 61 (Opt_exp -> EXPRESION .)


state 85

    (62) Opt_exp -> CTE_STRING .

    COMMA           reduce using rule 62 (Opt_exp -> CTE_STRING .)
    RPARENTHESES    reduce using rule 62 (Opt_exp -> CTE_STRING .)


state 86

    (23) Parameters -> ID ACTION_2 COLON . Type More_parameters
    (14) Type -> . INT ACTION_3
    (15) Type -> . FLOAT ACTION_3

    INT             shift and go to state 27
    FLOAT           shift and go to state 28

    Type                           shift and go to state 119

state 87

    (21) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET . Declare_var BODY RBRACKET SEMICOLON
    (4) Declare_var -> . VARS
    (5) Declare_var -> . vacio
    (6) VARS -> . VAR Variables
    (75) vacio -> .

    VAR             shift and go to state 9
    LCBRACKET       reduce using rule 75 (vacio -> .)

    Declare_var                    shift and go to state 120
    VARS                           shift and go to state 7
    vacio                          shift and go to state 8

state 88

    (35) ASSIGN -> ID EQUALS EXPRESION SEMICOLON .

    ID              reduce using rule 35 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)
    IF              reduce using rule 35 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)
    DO              reduce using rule 35 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)
    PRINT           reduce using rule 35 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)
    RCBRACKET       reduce using rule 35 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)


state 89

    (36) EXPRESION -> EXP Comp_logic .

    SEMICOLON       reduce using rule 36 (EXPRESION -> EXP Comp_logic .)
    COMMA           reduce using rule 36 (EXPRESION -> EXP Comp_logic .)
    RPARENTHESES    reduce using rule 36 (EXPRESION -> EXP Comp_logic .)


state 90

    (37) Comp_logic -> Op_logic . EXP
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    EXP                            shift and go to state 121
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 91

    (38) Comp_logic -> vacio .

    SEMICOLON       reduce using rule 38 (Comp_logic -> vacio .)
    COMMA           reduce using rule 38 (Comp_logic -> vacio .)
    RPARENTHESES    reduce using rule 38 (Comp_logic -> vacio .)


state 92

    (39) Op_logic -> GREATER .

    LPARENTHESES    reduce using rule 39 (Op_logic -> GREATER .)
    PLUS            reduce using rule 39 (Op_logic -> GREATER .)
    MINUS           reduce using rule 39 (Op_logic -> GREATER .)
    ID              reduce using rule 39 (Op_logic -> GREATER .)
    CTE_INT         reduce using rule 39 (Op_logic -> GREATER .)
    CTE_FLOAT       reduce using rule 39 (Op_logic -> GREATER .)


state 93

    (40) Op_logic -> LESS .

    LPARENTHESES    reduce using rule 40 (Op_logic -> LESS .)
    PLUS            reduce using rule 40 (Op_logic -> LESS .)
    MINUS           reduce using rule 40 (Op_logic -> LESS .)
    ID              reduce using rule 40 (Op_logic -> LESS .)
    CTE_INT         reduce using rule 40 (Op_logic -> LESS .)
    CTE_FLOAT       reduce using rule 40 (Op_logic -> LESS .)


state 94

    (41) Op_logic -> NOT_EQUALS .

    LPARENTHESES    reduce using rule 41 (Op_logic -> NOT_EQUALS .)
    PLUS            reduce using rule 41 (Op_logic -> NOT_EQUALS .)
    MINUS           reduce using rule 41 (Op_logic -> NOT_EQUALS .)
    ID              reduce using rule 41 (Op_logic -> NOT_EQUALS .)
    CTE_INT         reduce using rule 41 (Op_logic -> NOT_EQUALS .)
    CTE_FLOAT       reduce using rule 41 (Op_logic -> NOT_EQUALS .)


state 95

    (42) EXP -> TERMINO Sum_res .

    GREATER         reduce using rule 42 (EXP -> TERMINO Sum_res .)
    LESS            reduce using rule 42 (EXP -> TERMINO Sum_res .)
    NOT_EQUALS      reduce using rule 42 (EXP -> TERMINO Sum_res .)
    SEMICOLON       reduce using rule 42 (EXP -> TERMINO Sum_res .)
    COMMA           reduce using rule 42 (EXP -> TERMINO Sum_res .)
    RPARENTHESES    reduce using rule 42 (EXP -> TERMINO Sum_res .)


state 96

    (43) Sum_res -> PLUS . EXP
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    EXP                            shift and go to state 122
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 97

    (44) Sum_res -> MINUS . EXP
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    EXP                            shift and go to state 123
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 98

    (45) Sum_res -> vacio .

    GREATER         reduce using rule 45 (Sum_res -> vacio .)
    LESS            reduce using rule 45 (Sum_res -> vacio .)
    NOT_EQUALS      reduce using rule 45 (Sum_res -> vacio .)
    SEMICOLON       reduce using rule 45 (Sum_res -> vacio .)
    COMMA           reduce using rule 45 (Sum_res -> vacio .)
    RPARENTHESES    reduce using rule 45 (Sum_res -> vacio .)


state 99

    (46) TERMINO -> FACTOR Mult_div .

    PLUS            reduce using rule 46 (TERMINO -> FACTOR Mult_div .)
    MINUS           reduce using rule 46 (TERMINO -> FACTOR Mult_div .)
    GREATER         reduce using rule 46 (TERMINO -> FACTOR Mult_div .)
    LESS            reduce using rule 46 (TERMINO -> FACTOR Mult_div .)
    NOT_EQUALS      reduce using rule 46 (TERMINO -> FACTOR Mult_div .)
    SEMICOLON       reduce using rule 46 (TERMINO -> FACTOR Mult_div .)
    COMMA           reduce using rule 46 (TERMINO -> FACTOR Mult_div .)
    RPARENTHESES    reduce using rule 46 (TERMINO -> FACTOR Mult_div .)


state 100

    (47) Mult_div -> MULTIPLICATION . TERMINO
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    TERMINO                        shift and go to state 124
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 101

    (48) Mult_div -> DIVISION . TERMINO
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    TERMINO                        shift and go to state 125
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 102

    (49) Mult_div -> vacio .

    PLUS            reduce using rule 49 (Mult_div -> vacio .)
    MINUS           reduce using rule 49 (Mult_div -> vacio .)
    GREATER         reduce using rule 49 (Mult_div -> vacio .)
    LESS            reduce using rule 49 (Mult_div -> vacio .)
    NOT_EQUALS      reduce using rule 49 (Mult_div -> vacio .)
    SEMICOLON       reduce using rule 49 (Mult_div -> vacio .)
    COMMA           reduce using rule 49 (Mult_div -> vacio .)
    RPARENTHESES    reduce using rule 49 (Mult_div -> vacio .)


state 103

    (50) FACTOR -> LPARENTHESES EXPRESION . RPARENTHESES

    RPARENTHESES    shift and go to state 126


state 104

    (51) FACTOR -> Sum_res_factor ID_CONST .

    MULTIPLICATION  reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)
    DIVISION        reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)
    PLUS            reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)
    MINUS           reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)
    GREATER         reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)
    LESS            reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)
    NOT_EQUALS      reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)
    SEMICOLON       reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)
    COMMA           reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)
    RPARENTHESES    reduce using rule 51 (FACTOR -> Sum_res_factor ID_CONST .)


state 105

    (55) ID_CONST -> ID .

    MULTIPLICATION  reduce using rule 55 (ID_CONST -> ID .)
    DIVISION        reduce using rule 55 (ID_CONST -> ID .)
    PLUS            reduce using rule 55 (ID_CONST -> ID .)
    MINUS           reduce using rule 55 (ID_CONST -> ID .)
    GREATER         reduce using rule 55 (ID_CONST -> ID .)
    LESS            reduce using rule 55 (ID_CONST -> ID .)
    NOT_EQUALS      reduce using rule 55 (ID_CONST -> ID .)
    SEMICOLON       reduce using rule 55 (ID_CONST -> ID .)
    COMMA           reduce using rule 55 (ID_CONST -> ID .)
    RPARENTHESES    reduce using rule 55 (ID_CONST -> ID .)


state 106

    (56) ID_CONST -> CTE .

    MULTIPLICATION  reduce using rule 56 (ID_CONST -> CTE .)
    DIVISION        reduce using rule 56 (ID_CONST -> CTE .)
    PLUS            reduce using rule 56 (ID_CONST -> CTE .)
    MINUS           reduce using rule 56 (ID_CONST -> CTE .)
    GREATER         reduce using rule 56 (ID_CONST -> CTE .)
    LESS            reduce using rule 56 (ID_CONST -> CTE .)
    NOT_EQUALS      reduce using rule 56 (ID_CONST -> CTE .)
    SEMICOLON       reduce using rule 56 (ID_CONST -> CTE .)
    COMMA           reduce using rule 56 (ID_CONST -> CTE .)
    RPARENTHESES    reduce using rule 56 (ID_CONST -> CTE .)


state 107

    (57) CTE -> CTE_INT .

    MULTIPLICATION  reduce using rule 57 (CTE -> CTE_INT .)
    DIVISION        reduce using rule 57 (CTE -> CTE_INT .)
    PLUS            reduce using rule 57 (CTE -> CTE_INT .)
    MINUS           reduce using rule 57 (CTE -> CTE_INT .)
    GREATER         reduce using rule 57 (CTE -> CTE_INT .)
    LESS            reduce using rule 57 (CTE -> CTE_INT .)
    NOT_EQUALS      reduce using rule 57 (CTE -> CTE_INT .)
    SEMICOLON       reduce using rule 57 (CTE -> CTE_INT .)
    COMMA           reduce using rule 57 (CTE -> CTE_INT .)
    RPARENTHESES    reduce using rule 57 (CTE -> CTE_INT .)


state 108

    (58) CTE -> CTE_FLOAT .

    MULTIPLICATION  reduce using rule 58 (CTE -> CTE_FLOAT .)
    DIVISION        reduce using rule 58 (CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 58 (CTE -> CTE_FLOAT .)
    MINUS           reduce using rule 58 (CTE -> CTE_FLOAT .)
    GREATER         reduce using rule 58 (CTE -> CTE_FLOAT .)
    LESS            reduce using rule 58 (CTE -> CTE_FLOAT .)
    NOT_EQUALS      reduce using rule 58 (CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 58 (CTE -> CTE_FLOAT .)
    COMMA           reduce using rule 58 (CTE -> CTE_FLOAT .)
    RPARENTHESES    reduce using rule 58 (CTE -> CTE_FLOAT .)


state 109

    (69) F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 127


state 110

    (72) List_fexpresions -> EXPRESION More_fexpresions .

    RPARENTHESES    reduce using rule 72 (List_fexpresions -> EXPRESION More_fexpresions .)


state 111

    (73) More_fexpresions -> COMMA . List_fexpresions
    (72) List_fexpresions -> . EXPRESION More_fexpresions
    (36) EXPRESION -> . EXP Comp_logic
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    List_fexpresions               shift and go to state 128
    EXPRESION                      shift and go to state 79
    EXP                            shift and go to state 68
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 112

    (74) More_fexpresions -> vacio .

    RPARENTHESES    reduce using rule 74 (More_fexpresions -> vacio .)


state 113

    (66) CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES . BODY Else_condition SEMICOLON
    (27) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 33

    BODY                           shift and go to state 129

state 114

    (65) CYCLE -> DO BODY WHILE LPARENTHESES . EXPRESION RPARENTHESES SEMICOLON
    (36) EXPRESION -> . EXP Comp_logic
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    EXPRESION                      shift and go to state 130
    EXP                            shift and go to state 68
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 115

    (59) PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 131


state 116

    (60) List_expresions -> Opt_exp More_expresions .

    RPARENTHESES    reduce using rule 60 (List_expresions -> Opt_exp More_expresions .)


state 117

    (63) More_expresions -> COMMA . List_expresions
    (60) List_expresions -> . Opt_exp More_expresions
    (61) Opt_exp -> . EXPRESION
    (62) Opt_exp -> . CTE_STRING
    (36) EXPRESION -> . EXP Comp_logic
    (42) EXP -> . TERMINO Sum_res
    (46) TERMINO -> . FACTOR Mult_div
    (50) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (51) FACTOR -> . Sum_res_factor ID_CONST
    (52) Sum_res_factor -> . PLUS
    (53) Sum_res_factor -> . MINUS
    (54) Sum_res_factor -> . vacio
    (75) vacio -> .

    CTE_STRING      shift and go to state 85
    LPARENTHESES    shift and go to state 71
    PLUS            shift and go to state 73
    MINUS           shift and go to state 74
    ID              reduce using rule 75 (vacio -> .)
    CTE_INT         reduce using rule 75 (vacio -> .)
    CTE_FLOAT       reduce using rule 75 (vacio -> .)

    List_expresions                shift and go to state 132
    Opt_exp                        shift and go to state 83
    EXPRESION                      shift and go to state 84
    EXP                            shift and go to state 68
    TERMINO                        shift and go to state 69
    FACTOR                         shift and go to state 70
    Sum_res_factor                 shift and go to state 72
    vacio                          shift and go to state 75

state 118

    (64) More_expresions -> vacio .

    RPARENTHESES    reduce using rule 64 (More_expresions -> vacio .)


state 119

    (23) Parameters -> ID ACTION_2 COLON Type . More_parameters
    (25) More_parameters -> . COMMA Parameters
    (26) More_parameters -> . vacio
    (75) vacio -> .

    COMMA           shift and go to state 134
    RPARENTHESES    reduce using rule 75 (vacio -> .)

    More_parameters                shift and go to state 133
    vacio                          shift and go to state 135

state 120

    (21) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var . BODY RBRACKET SEMICOLON
    (27) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 33

    BODY                           shift and go to state 136

state 121

    (37) Comp_logic -> Op_logic EXP .

    SEMICOLON       reduce using rule 37 (Comp_logic -> Op_logic EXP .)
    COMMA           reduce using rule 37 (Comp_logic -> Op_logic EXP .)
    RPARENTHESES    reduce using rule 37 (Comp_logic -> Op_logic EXP .)


state 122

    (43) Sum_res -> PLUS EXP .

    GREATER         reduce using rule 43 (Sum_res -> PLUS EXP .)
    LESS            reduce using rule 43 (Sum_res -> PLUS EXP .)
    NOT_EQUALS      reduce using rule 43 (Sum_res -> PLUS EXP .)
    SEMICOLON       reduce using rule 43 (Sum_res -> PLUS EXP .)
    COMMA           reduce using rule 43 (Sum_res -> PLUS EXP .)
    RPARENTHESES    reduce using rule 43 (Sum_res -> PLUS EXP .)


state 123

    (44) Sum_res -> MINUS EXP .

    GREATER         reduce using rule 44 (Sum_res -> MINUS EXP .)
    LESS            reduce using rule 44 (Sum_res -> MINUS EXP .)
    NOT_EQUALS      reduce using rule 44 (Sum_res -> MINUS EXP .)
    SEMICOLON       reduce using rule 44 (Sum_res -> MINUS EXP .)
    COMMA           reduce using rule 44 (Sum_res -> MINUS EXP .)
    RPARENTHESES    reduce using rule 44 (Sum_res -> MINUS EXP .)


state 124

    (47) Mult_div -> MULTIPLICATION TERMINO .

    PLUS            reduce using rule 47 (Mult_div -> MULTIPLICATION TERMINO .)
    MINUS           reduce using rule 47 (Mult_div -> MULTIPLICATION TERMINO .)
    GREATER         reduce using rule 47 (Mult_div -> MULTIPLICATION TERMINO .)
    LESS            reduce using rule 47 (Mult_div -> MULTIPLICATION TERMINO .)
    NOT_EQUALS      reduce using rule 47 (Mult_div -> MULTIPLICATION TERMINO .)
    SEMICOLON       reduce using rule 47 (Mult_div -> MULTIPLICATION TERMINO .)
    COMMA           reduce using rule 47 (Mult_div -> MULTIPLICATION TERMINO .)
    RPARENTHESES    reduce using rule 47 (Mult_div -> MULTIPLICATION TERMINO .)


state 125

    (48) Mult_div -> DIVISION TERMINO .

    PLUS            reduce using rule 48 (Mult_div -> DIVISION TERMINO .)
    MINUS           reduce using rule 48 (Mult_div -> DIVISION TERMINO .)
    GREATER         reduce using rule 48 (Mult_div -> DIVISION TERMINO .)
    LESS            reduce using rule 48 (Mult_div -> DIVISION TERMINO .)
    NOT_EQUALS      reduce using rule 48 (Mult_div -> DIVISION TERMINO .)
    SEMICOLON       reduce using rule 48 (Mult_div -> DIVISION TERMINO .)
    COMMA           reduce using rule 48 (Mult_div -> DIVISION TERMINO .)
    RPARENTHESES    reduce using rule 48 (Mult_div -> DIVISION TERMINO .)


state 126

    (50) FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .

    MULTIPLICATION  reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    DIVISION        reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    PLUS            reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    MINUS           reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    GREATER         reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    LESS            reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    NOT_EQUALS      reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    SEMICOLON       reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    COMMA           reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    RPARENTHESES    reduce using rule 50 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)


state 127

    (69) F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .

    ID              reduce using rule 69 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)
    IF              reduce using rule 69 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)
    DO              reduce using rule 69 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 69 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)
    RCBRACKET       reduce using rule 69 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)


state 128

    (73) More_fexpresions -> COMMA List_fexpresions .

    RPARENTHESES    reduce using rule 73 (More_fexpresions -> COMMA List_fexpresions .)


state 129

    (66) CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY . Else_condition SEMICOLON
    (67) Else_condition -> . ELSE BODY
    (68) Else_condition -> . vacio
    (75) vacio -> .

    ELSE            shift and go to state 138
    SEMICOLON       reduce using rule 75 (vacio -> .)

    Else_condition                 shift and go to state 137
    vacio                          shift and go to state 139

state 130

    (65) CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION . RPARENTHESES SEMICOLON

    RPARENTHESES    shift and go to state 140


state 131

    (59) PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .

    ID              reduce using rule 59 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)
    IF              reduce using rule 59 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)
    DO              reduce using rule 59 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 59 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)
    RCBRACKET       reduce using rule 59 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)


state 132

    (63) More_expresions -> COMMA List_expresions .

    RPARENTHESES    reduce using rule 63 (More_expresions -> COMMA List_expresions .)


state 133

    (23) Parameters -> ID ACTION_2 COLON Type More_parameters .

    RPARENTHESES    reduce using rule 23 (Parameters -> ID ACTION_2 COLON Type More_parameters .)


state 134

    (25) More_parameters -> COMMA . Parameters
    (23) Parameters -> . ID ACTION_2 COLON Type More_parameters
    (24) Parameters -> . vacio
    (75) vacio -> .

    ID              shift and go to state 52
    RPARENTHESES    reduce using rule 75 (vacio -> .)

    Parameters                     shift and go to state 141
    vacio                          shift and go to state 54

state 135

    (26) More_parameters -> vacio .

    RPARENTHESES    reduce using rule 26 (More_parameters -> vacio .)


state 136

    (21) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 142


state 137

    (66) CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition . SEMICOLON

    SEMICOLON       shift and go to state 143


state 138

    (67) Else_condition -> ELSE . BODY
    (27) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 33

    BODY                           shift and go to state 144

state 139

    (68) Else_condition -> vacio .

    SEMICOLON       reduce using rule 68 (Else_condition -> vacio .)


state 140

    (65) CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 145


state 141

    (25) More_parameters -> COMMA Parameters .

    RPARENTHESES    reduce using rule 25 (More_parameters -> COMMA Parameters .)


state 142

    (21) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 146


state 143

    (66) CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .

    ID              reduce using rule 66 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)
    IF              reduce using rule 66 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)
    DO              reduce using rule 66 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)
    PRINT           reduce using rule 66 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)
    RCBRACKET       reduce using rule 66 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)


state 144

    (67) Else_condition -> ELSE BODY .

    SEMICOLON       reduce using rule 67 (Else_condition -> ELSE BODY .)


state 145

    (65) CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .

    ID              reduce using rule 65 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)
    IF              reduce using rule 65 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)
    DO              reduce using rule 65 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 65 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)
    RCBRACKET       reduce using rule 65 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)


state 146

    (21) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON .

    VOID            reduce using rule 21 (FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON .)
    MAIN            reduce using rule 21 (FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 20 resolved using rule (Declare_func -> vacio)
WARNING: rejected rule (More_func -> vacio) in state 20
WARNING: Rule (More_func -> vacio) is never reduced

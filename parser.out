Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN BODY END
Rule 2     ACTION_1 -> <empty>
Rule 3     Declare_var -> VARS
Rule 4     Declare_var -> vacio
Rule 5     VARS -> VAR Variables
Rule 6     Variables -> List_ids COLON Type SEMICOLON More_variables
Rule 7     More_variables -> Variables
Rule 8     More_variables -> vacio
Rule 9     List_ids -> ID ACTION_2 More_ids
Rule 10    ACTION_2 -> <empty>
Rule 11    More_ids -> COMMA List_ids
Rule 12    More_ids -> vacio
Rule 13    Type -> INT ACTION_3
Rule 14    Type -> FLOAT ACTION_3
Rule 15    ACTION_3 -> <empty>
Rule 16    Declare_func -> FUNCS More_func
Rule 17    Declare_func -> vacio
Rule 18    More_func -> Declare_func
Rule 19    More_func -> vacio
Rule 20    FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON
Rule 21    ACTION_4 -> <empty>
Rule 22    Parameters -> ID ACTION_2 COLON Type More_parameters
Rule 23    Parameters -> vacio
Rule 24    More_parameters -> COMMA Parameters
Rule 25    More_parameters -> vacio
Rule 26    BODY -> LCBRACKET Declare_statement RCBRACKET
Rule 27    Declare_statement -> STATEMENT Declare_statement
Rule 28    Declare_statement -> vacio
Rule 29    STATEMENT -> ASSIGN
Rule 30    STATEMENT -> CONDITION
Rule 31    STATEMENT -> CYCLE
Rule 32    STATEMENT -> F_CALL
Rule 33    STATEMENT -> PRINTF
Rule 34    ASSIGN -> ID EQUALS EXPRESION SEMICOLON
Rule 35    EXPRESION -> EXP Comp_logic
Rule 36    Comp_logic -> Op_logic EXP
Rule 37    Comp_logic -> vacio
Rule 38    Op_logic -> GREATER
Rule 39    Op_logic -> LESS
Rule 40    Op_logic -> NOT_EQUALS
Rule 41    EXP -> TERMINO Sum_res
Rule 42    Sum_res -> PLUS EXP
Rule 43    Sum_res -> MINUS EXP
Rule 44    Sum_res -> vacio
Rule 45    TERMINO -> FACTOR Mult_div
Rule 46    Mult_div -> MULTIPLICATION TERMINO
Rule 47    Mult_div -> DIVISION TERMINO
Rule 48    Mult_div -> vacio
Rule 49    FACTOR -> LPARENTHESES EXPRESION RPARENTHESES
Rule 50    FACTOR -> Sum_res_factor ID_CONST
Rule 51    Sum_res_factor -> PLUS
Rule 52    Sum_res_factor -> MINUS
Rule 53    Sum_res_factor -> vacio
Rule 54    ID_CONST -> ID
Rule 55    ID_CONST -> CTE
Rule 56    CTE -> CTE_INT
Rule 57    CTE -> CTE_FLOAT
Rule 58    PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON
Rule 59    List_expresions -> Opt_exp More_expresions
Rule 60    Opt_exp -> EXPRESION
Rule 61    Opt_exp -> CTE_STRING
Rule 62    More_expresions -> COMMA List_expresions
Rule 63    More_expresions -> vacio
Rule 64    CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON
Rule 65    CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON
Rule 66    Else_condition -> ELSE BODY
Rule 67    Else_condition -> vacio
Rule 68    F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON
Rule 69    F_expresion -> List_fexpresions
Rule 70    F_expresion -> vacio
Rule 71    List_fexpresions -> EXPRESION More_fexpresions
Rule 72    More_fexpresions -> COMMA List_fexpresions
Rule 73    More_fexpresions -> vacio
Rule 74    vacio -> <empty>

Terminals, with rules where they appear

COLON                : 6 22
COMMA                : 11 24 62 72
CTE_FLOAT            : 57
CTE_INT              : 56
CTE_STRING           : 61
DIVISION             : 47
DO                   : 64
ELSE                 : 66
END                  : 1
EQUALS               : 34
FLOAT                : 14
GREATER              : 38
ID                   : 1 9 20 22 34 54 68
IF                   : 65
INT                  : 13
LBRACKET             : 20
LCBRACKET            : 26
LESS                 : 39
LPARENTHESES         : 20 49 58 64 65 68
MAIN                 : 1
MINUS                : 43 52
MULTIPLICATION       : 46
NOT_EQUALS           : 40
PLUS                 : 42 51
PRINT                : 58
PROGRAM              : 1
RBRACKET             : 20
RCBRACKET            : 26
RPARENTHESES         : 20 49 58 64 65 68
SEMICOLON            : 1 6 20 34 58 64 65 68
VAR                  : 5
VOID                 : 20
WHILE                : 64
error                : 

Nonterminals, with rules where they appear

ACTION_1             : 1
ACTION_2             : 9 22
ACTION_3             : 13 14
ACTION_4             : 20
ASSIGN               : 29
BODY                 : 1 20 64 65 66
CONDITION            : 30
CTE                  : 55
CYCLE                : 31
Comp_logic           : 35
Declare_func         : 1 18
Declare_statement    : 26 27
Declare_var          : 1 20
EXP                  : 35 36 42 43
EXPRESION            : 34 49 60 64 65 71
Else_condition       : 65
FACTOR               : 45
FUNCS                : 16
F_CALL               : 32
F_expresion          : 68
ID_CONST             : 50
List_expresions      : 58 62
List_fexpresions     : 69 72
List_ids             : 6 11
More_expresions      : 59
More_fexpresions     : 71
More_func            : 16
More_ids             : 9
More_parameters      : 22
More_variables       : 6
Mult_div             : 45
Op_logic             : 36
Opt_exp              : 59
PRINTF               : 33
Parameters           : 20 24
Programa             : 0
STATEMENT            : 27
Sum_res              : 41
Sum_res_factor       : 50
TERMINO              : 41 46 47
Type                 : 6 22
VARS                 : 3
Variables            : 5 7
vacio                : 4 8 12 17 19 23 25 28 37 44 48 53 63 67 70 73

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN BODY END

    PROGRAM         shift and go to state 2

    Programa                       shift and go to state 1

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> PROGRAM . ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN BODY END

    ID              shift and go to state 3


state 3

    (1) Programa -> PROGRAM ID . ACTION_1 SEMICOLON Declare_var Declare_func MAIN BODY END
    (2) ACTION_1 -> .

    SEMICOLON       reduce using rule 2 (ACTION_1 -> .)

    ACTION_1                       shift and go to state 4

state 4

    (1) Programa -> PROGRAM ID ACTION_1 . SEMICOLON Declare_var Declare_func MAIN BODY END

    SEMICOLON       shift and go to state 5


state 5

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON . Declare_var Declare_func MAIN BODY END
    (3) Declare_var -> . VARS
    (4) Declare_var -> . vacio
    (5) VARS -> . VAR Variables
    (74) vacio -> .

    VAR             shift and go to state 9
    VOID            reduce using rule 74 (vacio -> .)
    MAIN            reduce using rule 74 (vacio -> .)

    Declare_var                    shift and go to state 6
    VARS                           shift and go to state 7
    vacio                          shift and go to state 8

state 6

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var . Declare_func MAIN BODY END
    (16) Declare_func -> . FUNCS More_func
    (17) Declare_func -> . vacio
    (20) FUNCS -> . VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON
    (74) vacio -> .

    VOID            shift and go to state 13
    MAIN            reduce using rule 74 (vacio -> .)

    Declare_func                   shift and go to state 10
    FUNCS                          shift and go to state 11
    vacio                          shift and go to state 12

state 7

    (3) Declare_var -> VARS .

    VOID            reduce using rule 3 (Declare_var -> VARS .)
    MAIN            reduce using rule 3 (Declare_var -> VARS .)
    LCBRACKET       reduce using rule 3 (Declare_var -> VARS .)


state 8

    (4) Declare_var -> vacio .

    VOID            reduce using rule 4 (Declare_var -> vacio .)
    MAIN            reduce using rule 4 (Declare_var -> vacio .)
    LCBRACKET       reduce using rule 4 (Declare_var -> vacio .)


state 9

    (5) VARS -> VAR . Variables
    (6) Variables -> . List_ids COLON Type SEMICOLON More_variables
    (9) List_ids -> . ID ACTION_2 More_ids

    ID              shift and go to state 16

    Variables                      shift and go to state 14
    List_ids                       shift and go to state 15

state 10

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func . MAIN BODY END

    MAIN            shift and go to state 17


state 11

    (16) Declare_func -> FUNCS . More_func
    (18) More_func -> . Declare_func
    (19) More_func -> . vacio
    (16) Declare_func -> . FUNCS More_func
    (17) Declare_func -> . vacio
    (74) vacio -> .
    (20) FUNCS -> . VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON

    MAIN            reduce using rule 74 (vacio -> .)
    VOID            shift and go to state 13

    FUNCS                          shift and go to state 11
    More_func                      shift and go to state 18
    Declare_func                   shift and go to state 19
    vacio                          shift and go to state 20

state 12

    (17) Declare_func -> vacio .

    MAIN            reduce using rule 17 (Declare_func -> vacio .)


state 13

    (20) FUNCS -> VOID . ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON

    ID              shift and go to state 21


state 14

    (5) VARS -> VAR Variables .

    VOID            reduce using rule 5 (VARS -> VAR Variables .)
    MAIN            reduce using rule 5 (VARS -> VAR Variables .)
    LCBRACKET       reduce using rule 5 (VARS -> VAR Variables .)


state 15

    (6) Variables -> List_ids . COLON Type SEMICOLON More_variables

    COLON           shift and go to state 22


state 16

    (9) List_ids -> ID . ACTION_2 More_ids
    (10) ACTION_2 -> .

    COMMA           reduce using rule 10 (ACTION_2 -> .)
    COLON           reduce using rule 10 (ACTION_2 -> .)

    ACTION_2                       shift and go to state 23

state 17

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN . BODY END
    (26) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 25

    BODY                           shift and go to state 24

state 18

    (16) Declare_func -> FUNCS More_func .

    MAIN            reduce using rule 16 (Declare_func -> FUNCS More_func .)


state 19

    (18) More_func -> Declare_func .

    MAIN            reduce using rule 18 (More_func -> Declare_func .)


state 20

    (19) More_func -> vacio .
    (17) Declare_func -> vacio .

  ! reduce/reduce conflict for MAIN resolved using rule 17 (Declare_func -> vacio .)
    MAIN            reduce using rule 17 (Declare_func -> vacio .)

  ! MAIN            [ reduce using rule 19 (More_func -> vacio .) ]


state 21

    (20) FUNCS -> VOID ID . ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON
    (21) ACTION_4 -> .

    LPARENTHESES    reduce using rule 21 (ACTION_4 -> .)

    ACTION_4                       shift and go to state 26

state 22

    (6) Variables -> List_ids COLON . Type SEMICOLON More_variables
    (13) Type -> . INT ACTION_3
    (14) Type -> . FLOAT ACTION_3

    INT             shift and go to state 28
    FLOAT           shift and go to state 29

    Type                           shift and go to state 27

state 23

    (9) List_ids -> ID ACTION_2 . More_ids
    (11) More_ids -> . COMMA List_ids
    (12) More_ids -> . vacio
    (74) vacio -> .

    COMMA           shift and go to state 31
    COLON           reduce using rule 74 (vacio -> .)

    More_ids                       shift and go to state 30
    vacio                          shift and go to state 32

state 24

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN BODY . END

    END             shift and go to state 33


state 25

    (26) BODY -> LCBRACKET . Declare_statement RCBRACKET
    (27) Declare_statement -> . STATEMENT Declare_statement
    (28) Declare_statement -> . vacio
    (29) STATEMENT -> . ASSIGN
    (30) STATEMENT -> . CONDITION
    (31) STATEMENT -> . CYCLE
    (32) STATEMENT -> . F_CALL
    (33) STATEMENT -> . PRINTF
    (74) vacio -> .
    (34) ASSIGN -> . ID EQUALS EXPRESION SEMICOLON
    (65) CONDITION -> . IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON
    (64) CYCLE -> . DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON
    (68) F_CALL -> . ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON
    (58) PRINTF -> . PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON

    RCBRACKET       reduce using rule 74 (vacio -> .)
    ID              shift and go to state 42
    IF              shift and go to state 43
    DO              shift and go to state 44
    PRINT           shift and go to state 45

    Declare_statement              shift and go to state 34
    STATEMENT                      shift and go to state 35
    vacio                          shift and go to state 36
    ASSIGN                         shift and go to state 37
    CONDITION                      shift and go to state 38
    CYCLE                          shift and go to state 39
    F_CALL                         shift and go to state 40
    PRINTF                         shift and go to state 41

state 26

    (20) FUNCS -> VOID ID ACTION_4 . LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON

    LPARENTHESES    shift and go to state 46


state 27

    (6) Variables -> List_ids COLON Type . SEMICOLON More_variables

    SEMICOLON       shift and go to state 47


state 28

    (13) Type -> INT . ACTION_3
    (15) ACTION_3 -> .

    SEMICOLON       reduce using rule 15 (ACTION_3 -> .)
    COMMA           reduce using rule 15 (ACTION_3 -> .)
    RPARENTHESES    reduce using rule 15 (ACTION_3 -> .)

    ACTION_3                       shift and go to state 48

state 29

    (14) Type -> FLOAT . ACTION_3
    (15) ACTION_3 -> .

    SEMICOLON       reduce using rule 15 (ACTION_3 -> .)
    COMMA           reduce using rule 15 (ACTION_3 -> .)
    RPARENTHESES    reduce using rule 15 (ACTION_3 -> .)

    ACTION_3                       shift and go to state 49

state 30

    (9) List_ids -> ID ACTION_2 More_ids .

    COLON           reduce using rule 9 (List_ids -> ID ACTION_2 More_ids .)


state 31

    (11) More_ids -> COMMA . List_ids
    (9) List_ids -> . ID ACTION_2 More_ids

    ID              shift and go to state 16

    List_ids                       shift and go to state 50

state 32

    (12) More_ids -> vacio .

    COLON           reduce using rule 12 (More_ids -> vacio .)


state 33

    (1) Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN BODY END .

    $end            reduce using rule 1 (Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN BODY END .)


state 34

    (26) BODY -> LCBRACKET Declare_statement . RCBRACKET

    RCBRACKET       shift and go to state 51


state 35

    (27) Declare_statement -> STATEMENT . Declare_statement
    (27) Declare_statement -> . STATEMENT Declare_statement
    (28) Declare_statement -> . vacio
    (29) STATEMENT -> . ASSIGN
    (30) STATEMENT -> . CONDITION
    (31) STATEMENT -> . CYCLE
    (32) STATEMENT -> . F_CALL
    (33) STATEMENT -> . PRINTF
    (74) vacio -> .
    (34) ASSIGN -> . ID EQUALS EXPRESION SEMICOLON
    (65) CONDITION -> . IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON
    (64) CYCLE -> . DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON
    (68) F_CALL -> . ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON
    (58) PRINTF -> . PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON

    RCBRACKET       reduce using rule 74 (vacio -> .)
    ID              shift and go to state 42
    IF              shift and go to state 43
    DO              shift and go to state 44
    PRINT           shift and go to state 45

    STATEMENT                      shift and go to state 35
    Declare_statement              shift and go to state 52
    vacio                          shift and go to state 36
    ASSIGN                         shift and go to state 37
    CONDITION                      shift and go to state 38
    CYCLE                          shift and go to state 39
    F_CALL                         shift and go to state 40
    PRINTF                         shift and go to state 41

state 36

    (28) Declare_statement -> vacio .

    RCBRACKET       reduce using rule 28 (Declare_statement -> vacio .)


state 37

    (29) STATEMENT -> ASSIGN .

    ID              reduce using rule 29 (STATEMENT -> ASSIGN .)
    IF              reduce using rule 29 (STATEMENT -> ASSIGN .)
    DO              reduce using rule 29 (STATEMENT -> ASSIGN .)
    PRINT           reduce using rule 29 (STATEMENT -> ASSIGN .)
    RCBRACKET       reduce using rule 29 (STATEMENT -> ASSIGN .)


state 38

    (30) STATEMENT -> CONDITION .

    ID              reduce using rule 30 (STATEMENT -> CONDITION .)
    IF              reduce using rule 30 (STATEMENT -> CONDITION .)
    DO              reduce using rule 30 (STATEMENT -> CONDITION .)
    PRINT           reduce using rule 30 (STATEMENT -> CONDITION .)
    RCBRACKET       reduce using rule 30 (STATEMENT -> CONDITION .)


state 39

    (31) STATEMENT -> CYCLE .

    ID              reduce using rule 31 (STATEMENT -> CYCLE .)
    IF              reduce using rule 31 (STATEMENT -> CYCLE .)
    DO              reduce using rule 31 (STATEMENT -> CYCLE .)
    PRINT           reduce using rule 31 (STATEMENT -> CYCLE .)
    RCBRACKET       reduce using rule 31 (STATEMENT -> CYCLE .)


state 40

    (32) STATEMENT -> F_CALL .

    ID              reduce using rule 32 (STATEMENT -> F_CALL .)
    IF              reduce using rule 32 (STATEMENT -> F_CALL .)
    DO              reduce using rule 32 (STATEMENT -> F_CALL .)
    PRINT           reduce using rule 32 (STATEMENT -> F_CALL .)
    RCBRACKET       reduce using rule 32 (STATEMENT -> F_CALL .)


state 41

    (33) STATEMENT -> PRINTF .

    ID              reduce using rule 33 (STATEMENT -> PRINTF .)
    IF              reduce using rule 33 (STATEMENT -> PRINTF .)
    DO              reduce using rule 33 (STATEMENT -> PRINTF .)
    PRINT           reduce using rule 33 (STATEMENT -> PRINTF .)
    RCBRACKET       reduce using rule 33 (STATEMENT -> PRINTF .)


state 42

    (34) ASSIGN -> ID . EQUALS EXPRESION SEMICOLON
    (68) F_CALL -> ID . LPARENTHESES F_expresion RPARENTHESES SEMICOLON

    EQUALS          shift and go to state 53
    LPARENTHESES    shift and go to state 54


state 43

    (65) CONDITION -> IF . LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON

    LPARENTHESES    shift and go to state 55


state 44

    (64) CYCLE -> DO . BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON
    (26) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 25

    BODY                           shift and go to state 56

state 45

    (58) PRINTF -> PRINT . LPARENTHESES List_expresions RPARENTHESES SEMICOLON

    LPARENTHESES    shift and go to state 57


state 46

    (20) FUNCS -> VOID ID ACTION_4 LPARENTHESES . Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON
    (22) Parameters -> . ID ACTION_2 COLON Type More_parameters
    (23) Parameters -> . vacio
    (74) vacio -> .

    ID              shift and go to state 58
    RPARENTHESES    reduce using rule 74 (vacio -> .)

    Parameters                     shift and go to state 59
    vacio                          shift and go to state 60

state 47

    (6) Variables -> List_ids COLON Type SEMICOLON . More_variables
    (7) More_variables -> . Variables
    (8) More_variables -> . vacio
    (6) Variables -> . List_ids COLON Type SEMICOLON More_variables
    (74) vacio -> .
    (9) List_ids -> . ID ACTION_2 More_ids

    VOID            reduce using rule 74 (vacio -> .)
    MAIN            reduce using rule 74 (vacio -> .)
    LCBRACKET       reduce using rule 74 (vacio -> .)
    ID              shift and go to state 16

    List_ids                       shift and go to state 15
    More_variables                 shift and go to state 61
    Variables                      shift and go to state 62
    vacio                          shift and go to state 63

state 48

    (13) Type -> INT ACTION_3 .

    SEMICOLON       reduce using rule 13 (Type -> INT ACTION_3 .)
    COMMA           reduce using rule 13 (Type -> INT ACTION_3 .)
    RPARENTHESES    reduce using rule 13 (Type -> INT ACTION_3 .)


state 49

    (14) Type -> FLOAT ACTION_3 .

    SEMICOLON       reduce using rule 14 (Type -> FLOAT ACTION_3 .)
    COMMA           reduce using rule 14 (Type -> FLOAT ACTION_3 .)
    RPARENTHESES    reduce using rule 14 (Type -> FLOAT ACTION_3 .)


state 50

    (11) More_ids -> COMMA List_ids .

    COLON           reduce using rule 11 (More_ids -> COMMA List_ids .)


state 51

    (26) BODY -> LCBRACKET Declare_statement RCBRACKET .

    END             reduce using rule 26 (BODY -> LCBRACKET Declare_statement RCBRACKET .)
    WHILE           reduce using rule 26 (BODY -> LCBRACKET Declare_statement RCBRACKET .)
    ELSE            reduce using rule 26 (BODY -> LCBRACKET Declare_statement RCBRACKET .)
    SEMICOLON       reduce using rule 26 (BODY -> LCBRACKET Declare_statement RCBRACKET .)
    RBRACKET        reduce using rule 26 (BODY -> LCBRACKET Declare_statement RCBRACKET .)


state 52

    (27) Declare_statement -> STATEMENT Declare_statement .

    RCBRACKET       reduce using rule 27 (Declare_statement -> STATEMENT Declare_statement .)


state 53

    (34) ASSIGN -> ID EQUALS . EXPRESION SEMICOLON
    (35) EXPRESION -> . EXP Comp_logic
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    EXPRESION                      shift and go to state 64
    EXP                            shift and go to state 65
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 54

    (68) F_CALL -> ID LPARENTHESES . F_expresion RPARENTHESES SEMICOLON
    (69) F_expresion -> . List_fexpresions
    (70) F_expresion -> . vacio
    (71) List_fexpresions -> . EXPRESION More_fexpresions
    (74) vacio -> .
    (35) EXPRESION -> . EXP Comp_logic
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio

    RPARENTHESES    reduce using rule 74 (vacio -> .)
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)
    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71

    F_expresion                    shift and go to state 73
    List_fexpresions               shift and go to state 74
    vacio                          shift and go to state 75
    EXPRESION                      shift and go to state 76
    EXP                            shift and go to state 65
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69

state 55

    (65) CONDITION -> IF LPARENTHESES . EXPRESION RPARENTHESES BODY Else_condition SEMICOLON
    (35) EXPRESION -> . EXP Comp_logic
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    EXPRESION                      shift and go to state 77
    EXP                            shift and go to state 65
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 56

    (64) CYCLE -> DO BODY . WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON

    WHILE           shift and go to state 78


state 57

    (58) PRINTF -> PRINT LPARENTHESES . List_expresions RPARENTHESES SEMICOLON
    (59) List_expresions -> . Opt_exp More_expresions
    (60) Opt_exp -> . EXPRESION
    (61) Opt_exp -> . CTE_STRING
    (35) EXPRESION -> . EXP Comp_logic
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    CTE_STRING      shift and go to state 82
    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    List_expresions                shift and go to state 79
    Opt_exp                        shift and go to state 80
    EXPRESION                      shift and go to state 81
    EXP                            shift and go to state 65
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 58

    (22) Parameters -> ID . ACTION_2 COLON Type More_parameters
    (10) ACTION_2 -> .

    COLON           reduce using rule 10 (ACTION_2 -> .)

    ACTION_2                       shift and go to state 83

state 59

    (20) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters . RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON

    RPARENTHESES    shift and go to state 84


state 60

    (23) Parameters -> vacio .

    RPARENTHESES    reduce using rule 23 (Parameters -> vacio .)


state 61

    (6) Variables -> List_ids COLON Type SEMICOLON More_variables .

    VOID            reduce using rule 6 (Variables -> List_ids COLON Type SEMICOLON More_variables .)
    MAIN            reduce using rule 6 (Variables -> List_ids COLON Type SEMICOLON More_variables .)
    LCBRACKET       reduce using rule 6 (Variables -> List_ids COLON Type SEMICOLON More_variables .)


state 62

    (7) More_variables -> Variables .

    VOID            reduce using rule 7 (More_variables -> Variables .)
    MAIN            reduce using rule 7 (More_variables -> Variables .)
    LCBRACKET       reduce using rule 7 (More_variables -> Variables .)


state 63

    (8) More_variables -> vacio .

    VOID            reduce using rule 8 (More_variables -> vacio .)
    MAIN            reduce using rule 8 (More_variables -> vacio .)
    LCBRACKET       reduce using rule 8 (More_variables -> vacio .)


state 64

    (34) ASSIGN -> ID EQUALS EXPRESION . SEMICOLON

    SEMICOLON       shift and go to state 85


state 65

    (35) EXPRESION -> EXP . Comp_logic
    (36) Comp_logic -> . Op_logic EXP
    (37) Comp_logic -> . vacio
    (38) Op_logic -> . GREATER
    (39) Op_logic -> . LESS
    (40) Op_logic -> . NOT_EQUALS
    (74) vacio -> .

    GREATER         shift and go to state 89
    LESS            shift and go to state 90
    NOT_EQUALS      shift and go to state 91
    SEMICOLON       reduce using rule 74 (vacio -> .)
    COMMA           reduce using rule 74 (vacio -> .)
    RPARENTHESES    reduce using rule 74 (vacio -> .)

    Comp_logic                     shift and go to state 86
    Op_logic                       shift and go to state 87
    vacio                          shift and go to state 88

state 66

    (41) EXP -> TERMINO . Sum_res
    (42) Sum_res -> . PLUS EXP
    (43) Sum_res -> . MINUS EXP
    (44) Sum_res -> . vacio
    (74) vacio -> .

    PLUS            shift and go to state 93
    MINUS           shift and go to state 94
    GREATER         reduce using rule 74 (vacio -> .)
    LESS            reduce using rule 74 (vacio -> .)
    NOT_EQUALS      reduce using rule 74 (vacio -> .)
    SEMICOLON       reduce using rule 74 (vacio -> .)
    COMMA           reduce using rule 74 (vacio -> .)
    RPARENTHESES    reduce using rule 74 (vacio -> .)

    Sum_res                        shift and go to state 92
    vacio                          shift and go to state 95

state 67

    (45) TERMINO -> FACTOR . Mult_div
    (46) Mult_div -> . MULTIPLICATION TERMINO
    (47) Mult_div -> . DIVISION TERMINO
    (48) Mult_div -> . vacio
    (74) vacio -> .

    MULTIPLICATION  shift and go to state 97
    DIVISION        shift and go to state 98
    PLUS            reduce using rule 74 (vacio -> .)
    MINUS           reduce using rule 74 (vacio -> .)
    GREATER         reduce using rule 74 (vacio -> .)
    LESS            reduce using rule 74 (vacio -> .)
    NOT_EQUALS      reduce using rule 74 (vacio -> .)
    SEMICOLON       reduce using rule 74 (vacio -> .)
    COMMA           reduce using rule 74 (vacio -> .)
    RPARENTHESES    reduce using rule 74 (vacio -> .)

    Mult_div                       shift and go to state 96
    vacio                          shift and go to state 99

state 68

    (49) FACTOR -> LPARENTHESES . EXPRESION RPARENTHESES
    (35) EXPRESION -> . EXP Comp_logic
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    EXPRESION                      shift and go to state 100
    EXP                            shift and go to state 65
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 69

    (50) FACTOR -> Sum_res_factor . ID_CONST
    (54) ID_CONST -> . ID
    (55) ID_CONST -> . CTE
    (56) CTE -> . CTE_INT
    (57) CTE -> . CTE_FLOAT

    ID              shift and go to state 102
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    ID_CONST                       shift and go to state 101
    CTE                            shift and go to state 103

state 70

    (51) Sum_res_factor -> PLUS .

    ID              reduce using rule 51 (Sum_res_factor -> PLUS .)
    CTE_INT         reduce using rule 51 (Sum_res_factor -> PLUS .)
    CTE_FLOAT       reduce using rule 51 (Sum_res_factor -> PLUS .)


state 71

    (52) Sum_res_factor -> MINUS .

    ID              reduce using rule 52 (Sum_res_factor -> MINUS .)
    CTE_INT         reduce using rule 52 (Sum_res_factor -> MINUS .)
    CTE_FLOAT       reduce using rule 52 (Sum_res_factor -> MINUS .)


state 72

    (53) Sum_res_factor -> vacio .

    ID              reduce using rule 53 (Sum_res_factor -> vacio .)
    CTE_INT         reduce using rule 53 (Sum_res_factor -> vacio .)
    CTE_FLOAT       reduce using rule 53 (Sum_res_factor -> vacio .)


state 73

    (68) F_CALL -> ID LPARENTHESES F_expresion . RPARENTHESES SEMICOLON

    RPARENTHESES    shift and go to state 106


state 74

    (69) F_expresion -> List_fexpresions .

    RPARENTHESES    reduce using rule 69 (F_expresion -> List_fexpresions .)


state 75

    (70) F_expresion -> vacio .
    (53) Sum_res_factor -> vacio .

    RPARENTHESES    reduce using rule 70 (F_expresion -> vacio .)
    ID              reduce using rule 53 (Sum_res_factor -> vacio .)
    CTE_INT         reduce using rule 53 (Sum_res_factor -> vacio .)
    CTE_FLOAT       reduce using rule 53 (Sum_res_factor -> vacio .)


state 76

    (71) List_fexpresions -> EXPRESION . More_fexpresions
    (72) More_fexpresions -> . COMMA List_fexpresions
    (73) More_fexpresions -> . vacio
    (74) vacio -> .

    COMMA           shift and go to state 108
    RPARENTHESES    reduce using rule 74 (vacio -> .)

    More_fexpresions               shift and go to state 107
    vacio                          shift and go to state 109

state 77

    (65) CONDITION -> IF LPARENTHESES EXPRESION . RPARENTHESES BODY Else_condition SEMICOLON

    RPARENTHESES    shift and go to state 110


state 78

    (64) CYCLE -> DO BODY WHILE . LPARENTHESES EXPRESION RPARENTHESES SEMICOLON

    LPARENTHESES    shift and go to state 111


state 79

    (58) PRINTF -> PRINT LPARENTHESES List_expresions . RPARENTHESES SEMICOLON

    RPARENTHESES    shift and go to state 112


state 80

    (59) List_expresions -> Opt_exp . More_expresions
    (62) More_expresions -> . COMMA List_expresions
    (63) More_expresions -> . vacio
    (74) vacio -> .

    COMMA           shift and go to state 114
    RPARENTHESES    reduce using rule 74 (vacio -> .)

    More_expresions                shift and go to state 113
    vacio                          shift and go to state 115

state 81

    (60) Opt_exp -> EXPRESION .

    COMMA           reduce using rule 60 (Opt_exp -> EXPRESION .)
    RPARENTHESES    reduce using rule 60 (Opt_exp -> EXPRESION .)


state 82

    (61) Opt_exp -> CTE_STRING .

    COMMA           reduce using rule 61 (Opt_exp -> CTE_STRING .)
    RPARENTHESES    reduce using rule 61 (Opt_exp -> CTE_STRING .)


state 83

    (22) Parameters -> ID ACTION_2 . COLON Type More_parameters

    COLON           shift and go to state 116


state 84

    (20) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES . LBRACKET Declare_var BODY RBRACKET SEMICOLON

    LBRACKET        shift and go to state 117


state 85

    (34) ASSIGN -> ID EQUALS EXPRESION SEMICOLON .

    ID              reduce using rule 34 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)
    IF              reduce using rule 34 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)
    DO              reduce using rule 34 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)
    PRINT           reduce using rule 34 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)
    RCBRACKET       reduce using rule 34 (ASSIGN -> ID EQUALS EXPRESION SEMICOLON .)


state 86

    (35) EXPRESION -> EXP Comp_logic .

    SEMICOLON       reduce using rule 35 (EXPRESION -> EXP Comp_logic .)
    COMMA           reduce using rule 35 (EXPRESION -> EXP Comp_logic .)
    RPARENTHESES    reduce using rule 35 (EXPRESION -> EXP Comp_logic .)


state 87

    (36) Comp_logic -> Op_logic . EXP
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    EXP                            shift and go to state 118
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 88

    (37) Comp_logic -> vacio .

    SEMICOLON       reduce using rule 37 (Comp_logic -> vacio .)
    COMMA           reduce using rule 37 (Comp_logic -> vacio .)
    RPARENTHESES    reduce using rule 37 (Comp_logic -> vacio .)


state 89

    (38) Op_logic -> GREATER .

    LPARENTHESES    reduce using rule 38 (Op_logic -> GREATER .)
    PLUS            reduce using rule 38 (Op_logic -> GREATER .)
    MINUS           reduce using rule 38 (Op_logic -> GREATER .)
    ID              reduce using rule 38 (Op_logic -> GREATER .)
    CTE_INT         reduce using rule 38 (Op_logic -> GREATER .)
    CTE_FLOAT       reduce using rule 38 (Op_logic -> GREATER .)


state 90

    (39) Op_logic -> LESS .

    LPARENTHESES    reduce using rule 39 (Op_logic -> LESS .)
    PLUS            reduce using rule 39 (Op_logic -> LESS .)
    MINUS           reduce using rule 39 (Op_logic -> LESS .)
    ID              reduce using rule 39 (Op_logic -> LESS .)
    CTE_INT         reduce using rule 39 (Op_logic -> LESS .)
    CTE_FLOAT       reduce using rule 39 (Op_logic -> LESS .)


state 91

    (40) Op_logic -> NOT_EQUALS .

    LPARENTHESES    reduce using rule 40 (Op_logic -> NOT_EQUALS .)
    PLUS            reduce using rule 40 (Op_logic -> NOT_EQUALS .)
    MINUS           reduce using rule 40 (Op_logic -> NOT_EQUALS .)
    ID              reduce using rule 40 (Op_logic -> NOT_EQUALS .)
    CTE_INT         reduce using rule 40 (Op_logic -> NOT_EQUALS .)
    CTE_FLOAT       reduce using rule 40 (Op_logic -> NOT_EQUALS .)


state 92

    (41) EXP -> TERMINO Sum_res .

    GREATER         reduce using rule 41 (EXP -> TERMINO Sum_res .)
    LESS            reduce using rule 41 (EXP -> TERMINO Sum_res .)
    NOT_EQUALS      reduce using rule 41 (EXP -> TERMINO Sum_res .)
    SEMICOLON       reduce using rule 41 (EXP -> TERMINO Sum_res .)
    COMMA           reduce using rule 41 (EXP -> TERMINO Sum_res .)
    RPARENTHESES    reduce using rule 41 (EXP -> TERMINO Sum_res .)


state 93

    (42) Sum_res -> PLUS . EXP
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    EXP                            shift and go to state 119
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 94

    (43) Sum_res -> MINUS . EXP
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    EXP                            shift and go to state 120
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 95

    (44) Sum_res -> vacio .

    GREATER         reduce using rule 44 (Sum_res -> vacio .)
    LESS            reduce using rule 44 (Sum_res -> vacio .)
    NOT_EQUALS      reduce using rule 44 (Sum_res -> vacio .)
    SEMICOLON       reduce using rule 44 (Sum_res -> vacio .)
    COMMA           reduce using rule 44 (Sum_res -> vacio .)
    RPARENTHESES    reduce using rule 44 (Sum_res -> vacio .)


state 96

    (45) TERMINO -> FACTOR Mult_div .

    PLUS            reduce using rule 45 (TERMINO -> FACTOR Mult_div .)
    MINUS           reduce using rule 45 (TERMINO -> FACTOR Mult_div .)
    GREATER         reduce using rule 45 (TERMINO -> FACTOR Mult_div .)
    LESS            reduce using rule 45 (TERMINO -> FACTOR Mult_div .)
    NOT_EQUALS      reduce using rule 45 (TERMINO -> FACTOR Mult_div .)
    SEMICOLON       reduce using rule 45 (TERMINO -> FACTOR Mult_div .)
    COMMA           reduce using rule 45 (TERMINO -> FACTOR Mult_div .)
    RPARENTHESES    reduce using rule 45 (TERMINO -> FACTOR Mult_div .)


state 97

    (46) Mult_div -> MULTIPLICATION . TERMINO
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    TERMINO                        shift and go to state 121
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 98

    (47) Mult_div -> DIVISION . TERMINO
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    TERMINO                        shift and go to state 122
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 99

    (48) Mult_div -> vacio .

    PLUS            reduce using rule 48 (Mult_div -> vacio .)
    MINUS           reduce using rule 48 (Mult_div -> vacio .)
    GREATER         reduce using rule 48 (Mult_div -> vacio .)
    LESS            reduce using rule 48 (Mult_div -> vacio .)
    NOT_EQUALS      reduce using rule 48 (Mult_div -> vacio .)
    SEMICOLON       reduce using rule 48 (Mult_div -> vacio .)
    COMMA           reduce using rule 48 (Mult_div -> vacio .)
    RPARENTHESES    reduce using rule 48 (Mult_div -> vacio .)


state 100

    (49) FACTOR -> LPARENTHESES EXPRESION . RPARENTHESES

    RPARENTHESES    shift and go to state 123


state 101

    (50) FACTOR -> Sum_res_factor ID_CONST .

    MULTIPLICATION  reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)
    DIVISION        reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)
    PLUS            reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)
    MINUS           reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)
    GREATER         reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)
    LESS            reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)
    NOT_EQUALS      reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)
    SEMICOLON       reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)
    COMMA           reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)
    RPARENTHESES    reduce using rule 50 (FACTOR -> Sum_res_factor ID_CONST .)


state 102

    (54) ID_CONST -> ID .

    MULTIPLICATION  reduce using rule 54 (ID_CONST -> ID .)
    DIVISION        reduce using rule 54 (ID_CONST -> ID .)
    PLUS            reduce using rule 54 (ID_CONST -> ID .)
    MINUS           reduce using rule 54 (ID_CONST -> ID .)
    GREATER         reduce using rule 54 (ID_CONST -> ID .)
    LESS            reduce using rule 54 (ID_CONST -> ID .)
    NOT_EQUALS      reduce using rule 54 (ID_CONST -> ID .)
    SEMICOLON       reduce using rule 54 (ID_CONST -> ID .)
    COMMA           reduce using rule 54 (ID_CONST -> ID .)
    RPARENTHESES    reduce using rule 54 (ID_CONST -> ID .)


state 103

    (55) ID_CONST -> CTE .

    MULTIPLICATION  reduce using rule 55 (ID_CONST -> CTE .)
    DIVISION        reduce using rule 55 (ID_CONST -> CTE .)
    PLUS            reduce using rule 55 (ID_CONST -> CTE .)
    MINUS           reduce using rule 55 (ID_CONST -> CTE .)
    GREATER         reduce using rule 55 (ID_CONST -> CTE .)
    LESS            reduce using rule 55 (ID_CONST -> CTE .)
    NOT_EQUALS      reduce using rule 55 (ID_CONST -> CTE .)
    SEMICOLON       reduce using rule 55 (ID_CONST -> CTE .)
    COMMA           reduce using rule 55 (ID_CONST -> CTE .)
    RPARENTHESES    reduce using rule 55 (ID_CONST -> CTE .)


state 104

    (56) CTE -> CTE_INT .

    MULTIPLICATION  reduce using rule 56 (CTE -> CTE_INT .)
    DIVISION        reduce using rule 56 (CTE -> CTE_INT .)
    PLUS            reduce using rule 56 (CTE -> CTE_INT .)
    MINUS           reduce using rule 56 (CTE -> CTE_INT .)
    GREATER         reduce using rule 56 (CTE -> CTE_INT .)
    LESS            reduce using rule 56 (CTE -> CTE_INT .)
    NOT_EQUALS      reduce using rule 56 (CTE -> CTE_INT .)
    SEMICOLON       reduce using rule 56 (CTE -> CTE_INT .)
    COMMA           reduce using rule 56 (CTE -> CTE_INT .)
    RPARENTHESES    reduce using rule 56 (CTE -> CTE_INT .)


state 105

    (57) CTE -> CTE_FLOAT .

    MULTIPLICATION  reduce using rule 57 (CTE -> CTE_FLOAT .)
    DIVISION        reduce using rule 57 (CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 57 (CTE -> CTE_FLOAT .)
    MINUS           reduce using rule 57 (CTE -> CTE_FLOAT .)
    GREATER         reduce using rule 57 (CTE -> CTE_FLOAT .)
    LESS            reduce using rule 57 (CTE -> CTE_FLOAT .)
    NOT_EQUALS      reduce using rule 57 (CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 57 (CTE -> CTE_FLOAT .)
    COMMA           reduce using rule 57 (CTE -> CTE_FLOAT .)
    RPARENTHESES    reduce using rule 57 (CTE -> CTE_FLOAT .)


state 106

    (68) F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 124


state 107

    (71) List_fexpresions -> EXPRESION More_fexpresions .

    RPARENTHESES    reduce using rule 71 (List_fexpresions -> EXPRESION More_fexpresions .)


state 108

    (72) More_fexpresions -> COMMA . List_fexpresions
    (71) List_fexpresions -> . EXPRESION More_fexpresions
    (35) EXPRESION -> . EXP Comp_logic
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    List_fexpresions               shift and go to state 125
    EXPRESION                      shift and go to state 76
    EXP                            shift and go to state 65
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 109

    (73) More_fexpresions -> vacio .

    RPARENTHESES    reduce using rule 73 (More_fexpresions -> vacio .)


state 110

    (65) CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES . BODY Else_condition SEMICOLON
    (26) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 25

    BODY                           shift and go to state 126

state 111

    (64) CYCLE -> DO BODY WHILE LPARENTHESES . EXPRESION RPARENTHESES SEMICOLON
    (35) EXPRESION -> . EXP Comp_logic
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    EXPRESION                      shift and go to state 127
    EXP                            shift and go to state 65
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 112

    (58) PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 128


state 113

    (59) List_expresions -> Opt_exp More_expresions .

    RPARENTHESES    reduce using rule 59 (List_expresions -> Opt_exp More_expresions .)


state 114

    (62) More_expresions -> COMMA . List_expresions
    (59) List_expresions -> . Opt_exp More_expresions
    (60) Opt_exp -> . EXPRESION
    (61) Opt_exp -> . CTE_STRING
    (35) EXPRESION -> . EXP Comp_logic
    (41) EXP -> . TERMINO Sum_res
    (45) TERMINO -> . FACTOR Mult_div
    (49) FACTOR -> . LPARENTHESES EXPRESION RPARENTHESES
    (50) FACTOR -> . Sum_res_factor ID_CONST
    (51) Sum_res_factor -> . PLUS
    (52) Sum_res_factor -> . MINUS
    (53) Sum_res_factor -> . vacio
    (74) vacio -> .

    CTE_STRING      shift and go to state 82
    LPARENTHESES    shift and go to state 68
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71
    ID              reduce using rule 74 (vacio -> .)
    CTE_INT         reduce using rule 74 (vacio -> .)
    CTE_FLOAT       reduce using rule 74 (vacio -> .)

    List_expresions                shift and go to state 129
    Opt_exp                        shift and go to state 80
    EXPRESION                      shift and go to state 81
    EXP                            shift and go to state 65
    TERMINO                        shift and go to state 66
    FACTOR                         shift and go to state 67
    Sum_res_factor                 shift and go to state 69
    vacio                          shift and go to state 72

state 115

    (63) More_expresions -> vacio .

    RPARENTHESES    reduce using rule 63 (More_expresions -> vacio .)


state 116

    (22) Parameters -> ID ACTION_2 COLON . Type More_parameters
    (13) Type -> . INT ACTION_3
    (14) Type -> . FLOAT ACTION_3

    INT             shift and go to state 28
    FLOAT           shift and go to state 29

    Type                           shift and go to state 130

state 117

    (20) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET . Declare_var BODY RBRACKET SEMICOLON
    (3) Declare_var -> . VARS
    (4) Declare_var -> . vacio
    (5) VARS -> . VAR Variables
    (74) vacio -> .

    VAR             shift and go to state 9
    LCBRACKET       reduce using rule 74 (vacio -> .)

    Declare_var                    shift and go to state 131
    VARS                           shift and go to state 7
    vacio                          shift and go to state 8

state 118

    (36) Comp_logic -> Op_logic EXP .

    SEMICOLON       reduce using rule 36 (Comp_logic -> Op_logic EXP .)
    COMMA           reduce using rule 36 (Comp_logic -> Op_logic EXP .)
    RPARENTHESES    reduce using rule 36 (Comp_logic -> Op_logic EXP .)


state 119

    (42) Sum_res -> PLUS EXP .

    GREATER         reduce using rule 42 (Sum_res -> PLUS EXP .)
    LESS            reduce using rule 42 (Sum_res -> PLUS EXP .)
    NOT_EQUALS      reduce using rule 42 (Sum_res -> PLUS EXP .)
    SEMICOLON       reduce using rule 42 (Sum_res -> PLUS EXP .)
    COMMA           reduce using rule 42 (Sum_res -> PLUS EXP .)
    RPARENTHESES    reduce using rule 42 (Sum_res -> PLUS EXP .)


state 120

    (43) Sum_res -> MINUS EXP .

    GREATER         reduce using rule 43 (Sum_res -> MINUS EXP .)
    LESS            reduce using rule 43 (Sum_res -> MINUS EXP .)
    NOT_EQUALS      reduce using rule 43 (Sum_res -> MINUS EXP .)
    SEMICOLON       reduce using rule 43 (Sum_res -> MINUS EXP .)
    COMMA           reduce using rule 43 (Sum_res -> MINUS EXP .)
    RPARENTHESES    reduce using rule 43 (Sum_res -> MINUS EXP .)


state 121

    (46) Mult_div -> MULTIPLICATION TERMINO .

    PLUS            reduce using rule 46 (Mult_div -> MULTIPLICATION TERMINO .)
    MINUS           reduce using rule 46 (Mult_div -> MULTIPLICATION TERMINO .)
    GREATER         reduce using rule 46 (Mult_div -> MULTIPLICATION TERMINO .)
    LESS            reduce using rule 46 (Mult_div -> MULTIPLICATION TERMINO .)
    NOT_EQUALS      reduce using rule 46 (Mult_div -> MULTIPLICATION TERMINO .)
    SEMICOLON       reduce using rule 46 (Mult_div -> MULTIPLICATION TERMINO .)
    COMMA           reduce using rule 46 (Mult_div -> MULTIPLICATION TERMINO .)
    RPARENTHESES    reduce using rule 46 (Mult_div -> MULTIPLICATION TERMINO .)


state 122

    (47) Mult_div -> DIVISION TERMINO .

    PLUS            reduce using rule 47 (Mult_div -> DIVISION TERMINO .)
    MINUS           reduce using rule 47 (Mult_div -> DIVISION TERMINO .)
    GREATER         reduce using rule 47 (Mult_div -> DIVISION TERMINO .)
    LESS            reduce using rule 47 (Mult_div -> DIVISION TERMINO .)
    NOT_EQUALS      reduce using rule 47 (Mult_div -> DIVISION TERMINO .)
    SEMICOLON       reduce using rule 47 (Mult_div -> DIVISION TERMINO .)
    COMMA           reduce using rule 47 (Mult_div -> DIVISION TERMINO .)
    RPARENTHESES    reduce using rule 47 (Mult_div -> DIVISION TERMINO .)


state 123

    (49) FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .

    MULTIPLICATION  reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    DIVISION        reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    PLUS            reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    MINUS           reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    GREATER         reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    LESS            reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    NOT_EQUALS      reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    SEMICOLON       reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    COMMA           reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)
    RPARENTHESES    reduce using rule 49 (FACTOR -> LPARENTHESES EXPRESION RPARENTHESES .)


state 124

    (68) F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .

    ID              reduce using rule 68 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)
    IF              reduce using rule 68 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)
    DO              reduce using rule 68 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 68 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)
    RCBRACKET       reduce using rule 68 (F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON .)


state 125

    (72) More_fexpresions -> COMMA List_fexpresions .

    RPARENTHESES    reduce using rule 72 (More_fexpresions -> COMMA List_fexpresions .)


state 126

    (65) CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY . Else_condition SEMICOLON
    (66) Else_condition -> . ELSE BODY
    (67) Else_condition -> . vacio
    (74) vacio -> .

    ELSE            shift and go to state 133
    SEMICOLON       reduce using rule 74 (vacio -> .)

    Else_condition                 shift and go to state 132
    vacio                          shift and go to state 134

state 127

    (64) CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION . RPARENTHESES SEMICOLON

    RPARENTHESES    shift and go to state 135


state 128

    (58) PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .

    ID              reduce using rule 58 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)
    IF              reduce using rule 58 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)
    DO              reduce using rule 58 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 58 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)
    RCBRACKET       reduce using rule 58 (PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON .)


state 129

    (62) More_expresions -> COMMA List_expresions .

    RPARENTHESES    reduce using rule 62 (More_expresions -> COMMA List_expresions .)


state 130

    (22) Parameters -> ID ACTION_2 COLON Type . More_parameters
    (24) More_parameters -> . COMMA Parameters
    (25) More_parameters -> . vacio
    (74) vacio -> .

    COMMA           shift and go to state 137
    RPARENTHESES    reduce using rule 74 (vacio -> .)

    More_parameters                shift and go to state 136
    vacio                          shift and go to state 138

state 131

    (20) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var . BODY RBRACKET SEMICOLON
    (26) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 25

    BODY                           shift and go to state 139

state 132

    (65) CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition . SEMICOLON

    SEMICOLON       shift and go to state 140


state 133

    (66) Else_condition -> ELSE . BODY
    (26) BODY -> . LCBRACKET Declare_statement RCBRACKET

    LCBRACKET       shift and go to state 25

    BODY                           shift and go to state 141

state 134

    (67) Else_condition -> vacio .

    SEMICOLON       reduce using rule 67 (Else_condition -> vacio .)


state 135

    (64) CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES . SEMICOLON

    SEMICOLON       shift and go to state 142


state 136

    (22) Parameters -> ID ACTION_2 COLON Type More_parameters .

    RPARENTHESES    reduce using rule 22 (Parameters -> ID ACTION_2 COLON Type More_parameters .)


state 137

    (24) More_parameters -> COMMA . Parameters
    (22) Parameters -> . ID ACTION_2 COLON Type More_parameters
    (23) Parameters -> . vacio
    (74) vacio -> .

    ID              shift and go to state 58
    RPARENTHESES    reduce using rule 74 (vacio -> .)

    Parameters                     shift and go to state 143
    vacio                          shift and go to state 60

state 138

    (25) More_parameters -> vacio .

    RPARENTHESES    reduce using rule 25 (More_parameters -> vacio .)


state 139

    (20) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 144


state 140

    (65) CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .

    ID              reduce using rule 65 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)
    IF              reduce using rule 65 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)
    DO              reduce using rule 65 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)
    PRINT           reduce using rule 65 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)
    RCBRACKET       reduce using rule 65 (CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON .)


state 141

    (66) Else_condition -> ELSE BODY .

    SEMICOLON       reduce using rule 66 (Else_condition -> ELSE BODY .)


state 142

    (64) CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .

    ID              reduce using rule 64 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)
    IF              reduce using rule 64 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)
    DO              reduce using rule 64 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)
    PRINT           reduce using rule 64 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)
    RCBRACKET       reduce using rule 64 (CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON .)


state 143

    (24) More_parameters -> COMMA Parameters .

    RPARENTHESES    reduce using rule 24 (More_parameters -> COMMA Parameters .)


state 144

    (20) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 145


state 145

    (20) FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON .

    VOID            reduce using rule 20 (FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON .)
    MAIN            reduce using rule 20 (FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 20 resolved using rule (Declare_func -> vacio)
WARNING: rejected rule (More_func -> vacio) in state 20
WARNING: Rule (More_func -> vacio) is never reduced

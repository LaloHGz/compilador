
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA CTE_FLOAT CTE_INT CTE_STRING DIVISION DO ELSE END EQUALS FLOAT GREATER ID IF INT LBRACKET LCBRACKET LESS LPARENTHESES MAIN MINUS MULTIPLICATION NOT_EQUALS PLUS PRINT PROGRAM RBRACKET RCBRACKET RPARENTHESES SEMICOLON VAR VOID WHILEPrograma : PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN BODY ENDACTION_1 :Declare_var : VARS\n                   | vacioVARS : VAR VariablesVariables : List_ids COLON Type SEMICOLON More_variablesMore_variables : Variables\n                      | vacioList_ids : ID ACTION_2 More_idsACTION_2 :More_ids : COMMA List_ids\n                | vacioType : INT ACTION_3\n            | FLOAT ACTION_3ACTION_3 :Declare_func : FUNCS More_func\n                    | vacioMore_func : Declare_func\n                 | vacioFUNCS : VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLONACTION_4 :Parameters : ID ACTION_2 COLON Type More_parameters\n                  | vacioMore_parameters : COMMA Parameters\n                      | vacioBODY : LCBRACKET Declare_statement RCBRACKETDeclare_statement : STATEMENT Declare_statement\n                         | vacioSTATEMENT : ASSIGN\n                 | CONDITION\n                 | CYCLE\n                 | F_CALL\n                 | PRINTFASSIGN : ID EQUALS EXPRESION SEMICOLONEXPRESION : EXP Comp_logicComp_logic : Op_logic EXP\n                  | vacioOp_logic : GREATER\n                | LESS\n                | NOT_EQUALSEXP : TERMINO Sum_resSum_res : PLUS EXP\n               | MINUS EXP\n               | vacioTERMINO : FACTOR Mult_divMult_div : MULTIPLICATION TERMINO\n                | DIVISION TERMINO\n                | vacioFACTOR : LPARENTHESES EXPRESION RPARENTHESES\n              | Sum_res_factor ID_CONSTSum_res_factor : PLUS\n                      | MINUS\n                      | vacioID_CONST : ID\n                | CTECTE : CTE_INT\n           | CTE_FLOATPRINTF : PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLONList_expresions : Opt_exp More_expresionsOpt_exp : EXPRESION\n               | CTE_STRINGMore_expresions : COMMA List_expresions\n                       | vacioCYCLE : DO  BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLONCONDITION : IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLONElse_condition : ELSE BODY\n                      | vacioF_CALL : ID LPARENTHESES F_expresion RPARENTHESES SEMICOLONF_expresion : List_fexpresions\n                   | vacioList_fexpresions : EXPRESION More_fexpresionsMore_fexpresions : COMMA List_fexpresions\n                        | vaciovacio : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,33,],[0,-1,]),'ID':([2,9,13,25,31,35,37,38,39,40,41,46,47,53,54,55,57,68,69,70,71,72,75,85,87,89,90,91,93,94,97,98,108,111,114,124,128,137,140,142,],[3,16,21,42,16,42,-29,-30,-31,-32,-33,58,16,-74,-74,-74,-74,-74,102,-51,-52,-53,-53,-34,-74,-38,-39,-40,-74,-74,-74,-74,-74,-74,-74,-68,-58,58,-65,-64,]),'SEMICOLON':([3,4,27,28,29,48,49,51,64,65,66,67,86,88,92,95,96,99,101,102,103,104,105,106,112,118,119,120,121,122,123,126,132,134,135,141,144,],[-2,5,47,-15,-15,-13,-14,-26,85,-74,-74,-74,-35,-37,-41,-44,-45,-48,-50,-54,-55,-56,-57,124,128,-36,-42,-43,-46,-47,-49,-74,140,-67,142,-66,145,]),'VAR':([5,117,],[9,9,]),'VOID':([5,6,7,8,11,14,47,61,62,63,145,],[-74,13,-3,-4,13,-5,-74,-6,-7,-8,-20,]),'MAIN':([5,6,7,8,10,11,12,14,18,19,20,47,61,62,63,145,],[-74,-74,-3,-4,17,-74,-17,-5,-16,-18,-17,-74,-6,-7,-8,-20,]),'LCBRACKET':([7,8,14,17,44,47,61,62,63,110,117,131,133,],[-3,-4,-5,25,25,-74,-6,-7,-8,25,-74,25,25,]),'COLON':([15,16,23,30,32,50,58,83,],[22,-10,-74,-9,-12,-11,-10,116,]),'COMMA':([16,23,28,29,48,49,65,66,67,76,80,81,82,86,88,92,95,96,99,101,102,103,104,105,118,119,120,121,122,123,130,],[-10,31,-15,-15,-13,-14,-74,-74,-74,108,114,-60,-61,-35,-37,-41,-44,-45,-48,-50,-54,-55,-56,-57,-36,-42,-43,-46,-47,-49,137,]),'LPARENTHESES':([21,26,42,43,45,53,54,55,57,68,78,87,89,90,91,93,94,97,98,108,111,114,],[-21,46,54,55,57,68,68,68,68,68,111,68,-38,-39,-40,68,68,68,68,68,68,68,]),'INT':([22,116,],[28,28,]),'FLOAT':([22,116,],[29,29,]),'END':([24,51,],[33,-26,]),'RCBRACKET':([25,34,35,36,37,38,39,40,41,52,85,124,128,140,142,],[-74,51,-74,-28,-29,-30,-31,-32,-33,-27,-34,-68,-58,-65,-64,]),'IF':([25,35,37,38,39,40,41,85,124,128,140,142,],[43,43,-29,-30,-31,-32,-33,-34,-68,-58,-65,-64,]),'DO':([25,35,37,38,39,40,41,85,124,128,140,142,],[44,44,-29,-30,-31,-32,-33,-34,-68,-58,-65,-64,]),'PRINT':([25,35,37,38,39,40,41,85,124,128,140,142,],[45,45,-29,-30,-31,-32,-33,-34,-68,-58,-65,-64,]),'RPARENTHESES':([28,29,46,48,49,54,59,60,65,66,67,73,74,75,76,77,79,80,81,82,86,88,92,95,96,99,100,101,102,103,104,105,107,109,113,115,118,119,120,121,122,123,125,127,129,130,136,137,138,143,],[-15,-15,-74,-13,-14,-74,84,-23,-74,-74,-74,106,-69,-70,-74,110,112,-74,-60,-61,-35,-37,-41,-44,-45,-48,123,-50,-54,-55,-56,-57,-71,-73,-59,-63,-36,-42,-43,-46,-47,-49,-72,135,-62,-74,-22,-74,-25,-24,]),'EQUALS':([42,],[53,]),'WHILE':([51,56,],[-26,78,]),'ELSE':([51,126,],[-26,133,]),'RBRACKET':([51,139,],[-26,144,]),'PLUS':([53,54,55,57,66,67,68,87,89,90,91,93,94,96,97,98,99,101,102,103,104,105,108,111,114,121,122,123,],[70,70,70,70,93,-74,70,70,-38,-39,-40,70,70,-45,70,70,-48,-50,-54,-55,-56,-57,70,70,70,-46,-47,-49,]),'MINUS':([53,54,55,57,66,67,68,87,89,90,91,93,94,96,97,98,99,101,102,103,104,105,108,111,114,121,122,123,],[71,71,71,71,94,-74,71,71,-38,-39,-40,71,71,-45,71,71,-48,-50,-54,-55,-56,-57,71,71,71,-46,-47,-49,]),'CTE_INT':([53,54,55,57,68,69,70,71,72,75,87,89,90,91,93,94,97,98,108,111,114,],[-74,-74,-74,-74,-74,104,-51,-52,-53,-53,-74,-38,-39,-40,-74,-74,-74,-74,-74,-74,-74,]),'CTE_FLOAT':([53,54,55,57,68,69,70,71,72,75,87,89,90,91,93,94,97,98,108,111,114,],[-74,-74,-74,-74,-74,105,-51,-52,-53,-53,-74,-38,-39,-40,-74,-74,-74,-74,-74,-74,-74,]),'CTE_STRING':([57,114,],[82,82,]),'GREATER':([65,66,67,92,95,96,99,101,102,103,104,105,119,120,121,122,123,],[89,-74,-74,-41,-44,-45,-48,-50,-54,-55,-56,-57,-42,-43,-46,-47,-49,]),'LESS':([65,66,67,92,95,96,99,101,102,103,104,105,119,120,121,122,123,],[90,-74,-74,-41,-44,-45,-48,-50,-54,-55,-56,-57,-42,-43,-46,-47,-49,]),'NOT_EQUALS':([65,66,67,92,95,96,99,101,102,103,104,105,119,120,121,122,123,],[91,-74,-74,-41,-44,-45,-48,-50,-54,-55,-56,-57,-42,-43,-46,-47,-49,]),'MULTIPLICATION':([67,101,102,103,104,105,123,],[97,-50,-54,-55,-56,-57,-49,]),'DIVISION':([67,101,102,103,104,105,123,],[98,-50,-54,-55,-56,-57,-49,]),'LBRACKET':([84,],[117,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Programa':([0,],[1,]),'ACTION_1':([3,],[4,]),'Declare_var':([5,117,],[6,131,]),'VARS':([5,117,],[7,7,]),'vacio':([5,6,11,23,25,35,46,47,53,54,55,57,65,66,67,68,76,80,87,93,94,97,98,108,111,114,117,126,130,137,],[8,12,20,32,36,36,60,63,72,75,72,72,88,95,99,72,109,115,72,72,72,72,72,72,72,72,8,134,138,60,]),'Declare_func':([6,11,],[10,19,]),'FUNCS':([6,11,],[11,11,]),'Variables':([9,47,],[14,62,]),'List_ids':([9,31,47,],[15,50,15,]),'More_func':([11,],[18,]),'ACTION_2':([16,58,],[23,83,]),'BODY':([17,44,110,131,133,],[24,56,126,139,141,]),'ACTION_4':([21,],[26,]),'Type':([22,116,],[27,130,]),'More_ids':([23,],[30,]),'Declare_statement':([25,35,],[34,52,]),'STATEMENT':([25,35,],[35,35,]),'ASSIGN':([25,35,],[37,37,]),'CONDITION':([25,35,],[38,38,]),'CYCLE':([25,35,],[39,39,]),'F_CALL':([25,35,],[40,40,]),'PRINTF':([25,35,],[41,41,]),'ACTION_3':([28,29,],[48,49,]),'Parameters':([46,137,],[59,143,]),'More_variables':([47,],[61,]),'EXPRESION':([53,54,55,57,68,108,111,114,],[64,76,77,81,100,76,127,81,]),'EXP':([53,54,55,57,68,87,93,94,108,111,114,],[65,65,65,65,65,118,119,120,65,65,65,]),'TERMINO':([53,54,55,57,68,87,93,94,97,98,108,111,114,],[66,66,66,66,66,66,66,66,121,122,66,66,66,]),'FACTOR':([53,54,55,57,68,87,93,94,97,98,108,111,114,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'Sum_res_factor':([53,54,55,57,68,87,93,94,97,98,108,111,114,],[69,69,69,69,69,69,69,69,69,69,69,69,69,]),'F_expresion':([54,],[73,]),'List_fexpresions':([54,108,],[74,125,]),'List_expresions':([57,114,],[79,129,]),'Opt_exp':([57,114,],[80,80,]),'Comp_logic':([65,],[86,]),'Op_logic':([65,],[87,]),'Sum_res':([66,],[92,]),'Mult_div':([67,],[96,]),'ID_CONST':([69,],[101,]),'CTE':([69,],[103,]),'More_fexpresions':([76,],[107,]),'More_expresions':([80,],[113,]),'Else_condition':([126,],[132,]),'More_parameters':([130,],[136,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Programa","S'",1,None,None,None),
  ('Programa -> PROGRAM ID ACTION_1 SEMICOLON Declare_var Declare_func MAIN BODY END','Programa',9,'p_Programa','parser_1.py',14),
  ('ACTION_1 -> <empty>','ACTION_1',0,'p_action_1','parser_1.py',18),
  ('Declare_var -> VARS','Declare_var',1,'p_Declare_var','parser_1.py',25),
  ('Declare_var -> vacio','Declare_var',1,'p_Declare_var','parser_1.py',26),
  ('VARS -> VAR Variables','VARS',2,'p_VARS','parser_1.py',29),
  ('Variables -> List_ids COLON Type SEMICOLON More_variables','Variables',5,'p_Variables','parser_1.py',32),
  ('More_variables -> Variables','More_variables',1,'p_More_variables','parser_1.py',35),
  ('More_variables -> vacio','More_variables',1,'p_More_variables','parser_1.py',36),
  ('List_ids -> ID ACTION_2 More_ids','List_ids',3,'p_List_ids','parser_1.py',39),
  ('ACTION_2 -> <empty>','ACTION_2',0,'p_action_2','parser_1.py',42),
  ('More_ids -> COMMA List_ids','More_ids',2,'p_More_ids','parser_1.py',47),
  ('More_ids -> vacio','More_ids',1,'p_More_ids','parser_1.py',48),
  ('Type -> INT ACTION_3','Type',2,'p_Type','parser_1.py',51),
  ('Type -> FLOAT ACTION_3','Type',2,'p_Type','parser_1.py',52),
  ('ACTION_3 -> <empty>','ACTION_3',0,'p_action_3','parser_1.py',55),
  ('Declare_func -> FUNCS More_func','Declare_func',2,'p_Declare_func','parser_1.py',62),
  ('Declare_func -> vacio','Declare_func',1,'p_Declare_func','parser_1.py',63),
  ('More_func -> Declare_func','More_func',1,'p_More_func','parser_1.py',66),
  ('More_func -> vacio','More_func',1,'p_More_func','parser_1.py',67),
  ('FUNCS -> VOID ID ACTION_4 LPARENTHESES Parameters RPARENTHESES LBRACKET Declare_var BODY RBRACKET SEMICOLON','FUNCS',11,'p_FUNCS','parser_1.py',70),
  ('ACTION_4 -> <empty>','ACTION_4',0,'p_action_4','parser_1.py',73),
  ('Parameters -> ID ACTION_2 COLON Type More_parameters','Parameters',5,'p_Parameters','parser_1.py',78),
  ('Parameters -> vacio','Parameters',1,'p_Parameters','parser_1.py',79),
  ('More_parameters -> COMMA Parameters','More_parameters',2,'p_More_parameters','parser_1.py',83),
  ('More_parameters -> vacio','More_parameters',1,'p_More_parameters','parser_1.py',84),
  ('BODY -> LCBRACKET Declare_statement RCBRACKET','BODY',3,'p_BODY','parser_1.py',87),
  ('Declare_statement -> STATEMENT Declare_statement','Declare_statement',2,'p_Declare_statement','parser_1.py',90),
  ('Declare_statement -> vacio','Declare_statement',1,'p_Declare_statement','parser_1.py',91),
  ('STATEMENT -> ASSIGN','STATEMENT',1,'p_STATEMENT','parser_1.py',94),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser_1.py',95),
  ('STATEMENT -> CYCLE','STATEMENT',1,'p_STATEMENT','parser_1.py',96),
  ('STATEMENT -> F_CALL','STATEMENT',1,'p_STATEMENT','parser_1.py',97),
  ('STATEMENT -> PRINTF','STATEMENT',1,'p_STATEMENT','parser_1.py',98),
  ('ASSIGN -> ID EQUALS EXPRESION SEMICOLON','ASSIGN',4,'p_ASSIGN','parser_1.py',102),
  ('EXPRESION -> EXP Comp_logic','EXPRESION',2,'p_EXPRESION','parser_1.py',105),
  ('Comp_logic -> Op_logic EXP','Comp_logic',2,'p_Comp_logic','parser_1.py',108),
  ('Comp_logic -> vacio','Comp_logic',1,'p_Comp_logic','parser_1.py',109),
  ('Op_logic -> GREATER','Op_logic',1,'p_Op_logic','parser_1.py',112),
  ('Op_logic -> LESS','Op_logic',1,'p_Op_logic','parser_1.py',113),
  ('Op_logic -> NOT_EQUALS','Op_logic',1,'p_Op_logic','parser_1.py',114),
  ('EXP -> TERMINO Sum_res','EXP',2,'p_EXP','parser_1.py',117),
  ('Sum_res -> PLUS EXP','Sum_res',2,'p_Sum_res','parser_1.py',120),
  ('Sum_res -> MINUS EXP','Sum_res',2,'p_Sum_res','parser_1.py',121),
  ('Sum_res -> vacio','Sum_res',1,'p_Sum_res','parser_1.py',122),
  ('TERMINO -> FACTOR Mult_div','TERMINO',2,'p_TERMINO','parser_1.py',125),
  ('Mult_div -> MULTIPLICATION TERMINO','Mult_div',2,'p_Mult_div','parser_1.py',128),
  ('Mult_div -> DIVISION TERMINO','Mult_div',2,'p_Mult_div','parser_1.py',129),
  ('Mult_div -> vacio','Mult_div',1,'p_Mult_div','parser_1.py',130),
  ('FACTOR -> LPARENTHESES EXPRESION RPARENTHESES','FACTOR',3,'p_FACTOR','parser_1.py',133),
  ('FACTOR -> Sum_res_factor ID_CONST','FACTOR',2,'p_FACTOR','parser_1.py',134),
  ('Sum_res_factor -> PLUS','Sum_res_factor',1,'p_Sum_res_factor','parser_1.py',138),
  ('Sum_res_factor -> MINUS','Sum_res_factor',1,'p_Sum_res_factor','parser_1.py',139),
  ('Sum_res_factor -> vacio','Sum_res_factor',1,'p_Sum_res_factor','parser_1.py',140),
  ('ID_CONST -> ID','ID_CONST',1,'p_ID_CONST','parser_1.py',143),
  ('ID_CONST -> CTE','ID_CONST',1,'p_ID_CONST','parser_1.py',144),
  ('CTE -> CTE_INT','CTE',1,'p_CTE','parser_1.py',147),
  ('CTE -> CTE_FLOAT','CTE',1,'p_CTE','parser_1.py',148),
  ('PRINTF -> PRINT LPARENTHESES List_expresions RPARENTHESES SEMICOLON','PRINTF',5,'p_PRINTF','parser_1.py',151),
  ('List_expresions -> Opt_exp More_expresions','List_expresions',2,'p_List_expresions','parser_1.py',154),
  ('Opt_exp -> EXPRESION','Opt_exp',1,'p_Opt_exp','parser_1.py',157),
  ('Opt_exp -> CTE_STRING','Opt_exp',1,'p_Opt_exp','parser_1.py',158),
  ('More_expresions -> COMMA List_expresions','More_expresions',2,'p_more_expresions','parser_1.py',161),
  ('More_expresions -> vacio','More_expresions',1,'p_more_expresions','parser_1.py',162),
  ('CYCLE -> DO BODY WHILE LPARENTHESES EXPRESION RPARENTHESES SEMICOLON','CYCLE',7,'p_CYCLE','parser_1.py',165),
  ('CONDITION -> IF LPARENTHESES EXPRESION RPARENTHESES BODY Else_condition SEMICOLON','CONDITION',7,'p_CONDITION','parser_1.py',168),
  ('Else_condition -> ELSE BODY','Else_condition',2,'p_Else_condition','parser_1.py',171),
  ('Else_condition -> vacio','Else_condition',1,'p_Else_condition','parser_1.py',172),
  ('F_CALL -> ID LPARENTHESES F_expresion RPARENTHESES SEMICOLON','F_CALL',5,'p_F_call','parser_1.py',175),
  ('F_expresion -> List_fexpresions','F_expresion',1,'p_F_expresion','parser_1.py',178),
  ('F_expresion -> vacio','F_expresion',1,'p_F_expresion','parser_1.py',179),
  ('List_fexpresions -> EXPRESION More_fexpresions','List_fexpresions',2,'p_List_fexpresions','parser_1.py',182),
  ('More_fexpresions -> COMMA List_fexpresions','More_fexpresions',2,'p_More_fexpresions','parser_1.py',185),
  ('More_fexpresions -> vacio','More_fexpresions',1,'p_More_fexpresions','parser_1.py',186),
  ('vacio -> <empty>','vacio',0,'p_vacio','parser_1.py',195),
]
